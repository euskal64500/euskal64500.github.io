{"version":3,"sources":["webpack:///./src/templates/post-template.js"],"names":["Post","markdownRemark","data","frontmatter","html","keywords","tags","concat","category","map","item","trim","title","lang","description","className","postStyles","post","date","dangerouslySetInnerHTML","__html","defaultProps","pageQuery"],"mappings":"2FAAA,2GAOMA,EAAO,SAAC,GAAc,IAClBC,EADiB,EAAXC,KACND,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACfC,EAAWF,EAAYG,KAC1BC,OAAOJ,EAAYK,UACnBC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,UAEpB,OACE,6BACE,kBAAC,IAAD,CACEC,MAAOT,EAAYS,MACnBC,KAAMV,EAAYU,KAClBC,YAAaX,EAAYW,YACzBT,SAAUA,IAEZ,yBAAKU,UAAWC,IAAWC,MACzB,wBAAIF,UAAWC,IAAWJ,OAAQT,EAAYS,OAC9C,uBAAGG,UAAWC,IAAWE,MAAOf,EAAYe,MAC5C,yBAAKC,wBAAyB,CAAEC,OAAQhB,QAyBhDJ,EAAKqB,aAAe,CAClBnB,KAAM,IAGOF,YAER,IAAMsB,EAAS","file":"component---src-templates-post-template-js-cbb5935379fe30bff9b6.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\n\nimport postStyles from '../styles/post.module.css'\n\nconst Post = ({ data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  const keywords = frontmatter.tags\n    .concat(frontmatter.category)\n    .map(item => item.trim())\n\n  return (\n    <div>\n      <SEO\n        title={frontmatter.title}\n        lang={frontmatter.lang}\n        description={frontmatter.description}\n        keywords={keywords}\n      />\n      <div className={postStyles.post}>\n        <h1 className={postStyles.title}>{frontmatter.title}</h1>\n        <p className={postStyles.date}>{frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </div>\n  )\n}\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      html: PropTypes.string.isRequired,\n      fields: PropTypes.shape({\n        slug: PropTypes.string.isRequired,\n      }),\n      frontmatter: PropTypes.shape({\n        category: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        lang: PropTypes.string.isRequired,\n        tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n      }),\n    }),\n  }),\n}\n\nPost.defaultProps = {\n  data: {},\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        lang\n        category\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}