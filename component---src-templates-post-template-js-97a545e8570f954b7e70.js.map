{"version":3,"sources":["webpack:///./src/templates/post-template.js","webpack:///./src/components/seo.js","webpack:///./src/styles/post.module.css"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_styles_post_module_css__WEBPACK_IMPORTED_MODULE_3__","_styles_post_module_css__WEBPACK_IMPORTED_MODULE_3___default","Post","_ref","markdownRemark","data","frontmatter","html","keywords","tags","concat","category","map","item","trim","a","createElement","title","lang","description","className","postStyles","post","date","dangerouslySetInnerHTML","__html","propTypes","PropTypes","shape","string","isRequired","fields","slug","defaultProps","detailsQuery","SEO","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","arrayOf","module","exports"],"mappings":"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","file":"component---src-templates-post-template-js-97a545e8570f954b7e70.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\n\nimport postStyles from '../styles/post.module.css'\n\nconst Post = ({ data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  const keywords = frontmatter.tags\n    .concat(frontmatter.category)\n    .map(item => item.trim())\n\n  return (\n    <div>\n      <SEO\n        title={frontmatter.title}\n        lang={frontmatter.lang}\n        description={frontmatter.description}\n        keywords={keywords}\n      />\n      <div className={postStyles.post}>\n        <h1 className={postStyles.title}>{frontmatter.title}</h1>\n        <p className={postStyles.date}>{frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </div>\n  )\n}\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      html: PropTypes.string.isRequired,\n      fields: PropTypes.shape({\n        slug: PropTypes.string.isRequired,\n      }),\n      frontmatter: PropTypes.shape({\n        category: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        lang: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nPost.defaultProps = {\n  data: {},\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        lang\n        category\n        tags\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post-module--post--28Mq2\",\"title\":\"post-module--title--3XBo2\",\"date\":\"post-module--date--1eM4d\"};"],"sourceRoot":""}