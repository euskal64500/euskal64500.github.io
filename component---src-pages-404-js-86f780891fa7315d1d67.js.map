{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/header.module.css","webpack:///./src/styles/layout.module.css","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Header","_ref","siteTitle","menuLinks","react_default","className","headerStyles","menu","map","link","index","gatsby_browser_entry","key","activeClassName","activeLink","to","text","name","arrayOf","defaultProps","Layout","layoutStyles","site","banner","header","siteMetadata","content","_3436215879","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array"],"mappings":"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","file":"component---src-pages-404-js-86f780891fa7315d1d67.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Link } from 'gatsby'\n\nimport headerStyles from '../styles/header.module.css'\n\nconst Header = ({ siteTitle, menuLinks }) => (\n  <nav className={ headerStyles.menu }>\n  {\n    menuLinks.map((link, index) => \n      <Link \n        key={ index }\n        activeClassName={ headerStyles.activeLink }\n        className={ headerStyles.link } \n        to={ link.link }\n      >\n        <p className={ headerStyles.text }>{ link.name }</p>\n      </Link>\n    )\n  }\n  </nav>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  menuLinks: PropTypes.arrayOf(PropTypes.object),\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  menuLinks: []\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nimport layoutStyles from '../styles/layout.module.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            menuLinks {\n              name\n              link\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className={ layoutStyles.site }>\n        <div className={ layoutStyles.banner }>\n          <div className={ layoutStyles.header }>\n            <Header\n              menuLinks={data.site.siteMetadata.menuLinks} \n              siteTitle={data.site.siteMetadata.title}\n            />\n          </div>\n        </div>\n        <div className={ layoutStyles.content }>\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"header-module--menu--15oJi\",\"activeLink\":\"header-module--activeLink--2YKR8\",\"text\":\"header-module--text--3UAQj\",\"link\":\"header-module--link--3k-9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"layout-module--banner--1X862\",\"header\":\"layout-module--header--aabB-\",\"content\":\"layout-module--content--3B0uJ\",\"site\":\"layout-module--site--1G-CH\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}