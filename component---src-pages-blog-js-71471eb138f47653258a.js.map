{"version":3,"sources":["webpack:///./src/components/blog-post.js","webpack:///./src/pages/blog.js"],"names":["BlogPost","category","title","description","cover","slug","className","blogPostStyles","card","link","to","content","left","right","sizes","childImageSharp","defaultProps","BlogPage","edges","data","blogs","map","node","fields","blogHeader","frontmatter","key","id","pageQuery"],"mappings":"oLAMMA,EAAW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAGvD,OACE,yBAAKC,UAAWC,IAAeC,MAC7B,kBAAC,OAAD,CAAMF,UAAWC,IAAeE,KAAMC,GAAIL,GACxC,yBAAKC,UAAWC,IAAeI,SAC7B,yBAAKL,UAAWC,IAAeK,MAC7B,uBAAGN,UAAWC,IAAeN,UACvBA,EADN,yBAGA,wBAAIK,UAAWC,IAAeL,OAAQA,GACtC,uBAAGI,UAAWC,IAAeJ,aAAcA,IAE7C,yBAAKG,UAAWC,IAAeM,OAC7B,kBAAC,IAAD,CAAKC,MAAOV,EAAMW,gBAAgBD,aAgB9Cd,EAASgB,aAAe,GAEThB,O,8ICjCTiB,EAAW,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACKC,MAAfF,MACR,OACE,6BACE,kBAAC,IAAD,CAAKhB,MAAM,SACX,6BACGgB,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEAjB,EACRiB,EADFC,OAAUlB,KAENmB,EAAU,eAAKnB,QAASiB,EAAKG,aACnC,OAAO,kBAAC,IAAD,eAAUC,IAAKJ,EAAKK,IAAQH,UA+B7CP,EAASD,aAAe,CACtBG,KAAM,IAGOF,YAER,IAAMW,EAAS","file":"component---src-pages-blog-js-71471eb138f47653258a.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport blogPostStyles from '../styles/blog-post.module.css'\n\nconst BlogPost = ({ category, title, description, cover, slug }) => {\n  const since = 2\n\n  return (\n    <div className={blogPostStyles.card}>\n      <Link className={blogPostStyles.link} to={slug}>\n        <div className={blogPostStyles.content}>\n          <div className={blogPostStyles.left}>\n            <p className={blogPostStyles.category}>\n              {`${category} - posted ${since} hours ago`}\n            </p>\n            <h1 className={blogPostStyles.title}>{title}</h1>\n            <p className={blogPostStyles.description}>{description}</p>\n          </div>\n          <div className={blogPostStyles.right}>\n            <Img sizes={cover.childImageSharp.sizes} />\n          </div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nBlogPost.propTypes = {\n  category: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  cover: PropTypes.string.isRequired,\n}\n\nBlogPost.defaultProps = {}\n\nexport default BlogPost\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport BlogPost from '../components/blog-post'\n\nconst BlogPage = ({ data }) => {\n  const { edges } = data.blogs\n  return (\n    <div>\n      <SEO title=\"Blog\" />\n      <div>\n        {edges.map(({ node }) => {\n          const {\n            fields: { slug },\n          } = node\n          const blogHeader = { slug, ...node.frontmatter }\n          return <BlogPost key={node.id} {...blogHeader} />\n        })}\n      </div>\n    </div>\n  )\n}\n\nBlogPage.propTypes = {\n  data: PropTypes.shape({\n    blogs: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n            frontmatter: PropTypes.shape({\n              category: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              description: PropTypes.string.isRequired,\n              cover: PropTypes.object.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nBlogPage.defaultProps = {\n  data: {},\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  query {\n    blogs: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            category\n            title\n            description\n            cover {\n              childImageSharp {\n                sizes(maxWidth: 200) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}