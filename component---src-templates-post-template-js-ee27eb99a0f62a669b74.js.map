{"version":3,"sources":["webpack:///./src/templates/post-template.js","webpack:///./src/components/seo.js","webpack:///./src/styles/post.module.css"],"names":["Post","_ref","markdownRemark","data","frontmatter","html","keywords","tags","split","concat","category","map","item","trim","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","lang","description","className","postStyles","post","date","dangerouslySetInnerHTML","__html","propTypes","PropTypes","shape","string","isRequired","fields","slug","arrayOf","defaultProps","pageQuery","detailsQuery","SEO","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","module","exports"],"mappings":"8MAOMA,EAAO,SAAAC,GAAc,IACjBC,EADiBD,EAAXE,KACND,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACfC,EAAWF,EAAYG,KAC1BC,MAAM,KACNC,OAAOL,EAAYM,UACnBC,IAAI,SAAAC,GAAI,OAAIA,EAAKC,SAEpB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAOd,EAAYc,MACnBC,KAAMf,EAAYe,KAClBC,YAAahB,EAAYgB,YACzBd,SAAUA,IAEZQ,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAWC,MACzBT,EAAAC,EAAAC,cAAA,MAAIK,UAAWC,IAAWJ,OAAQd,EAAYc,OAC9CJ,EAAAC,EAAAC,cAAA,KAAGK,UAAWC,IAAWE,MAAOpB,EAAYoB,MAC5CV,EAAAC,EAAAC,cAAA,OAAKS,wBAAyB,CAAEC,OAAQrB,QAMhDL,EAAK2B,UAAY,CACfxB,KAAMyB,IAAUC,MAAM,CACpB3B,eAAgB0B,IAAUC,MAAM,CAC9BxB,KAAMuB,IAAUE,OAAOC,WACvBC,OAAQJ,IAAUC,MAAM,CACtBI,KAAML,IAAUE,OAAOC,aAEzB3B,YAAawB,IAAUC,MAAM,CAC3BnB,SAAUkB,IAAUE,OAAOC,WAC3BP,KAAMI,IAAUE,OAAOC,WACvBb,MAAOU,IAAUE,OAAOC,WACxBX,YAAaQ,IAAUE,OAAOC,WAC9BZ,KAAMS,IAAUE,OAAOC,WACvBxB,KAAMqB,IAAUM,QAAQN,UAAUE,OAAOC,kBAMjD/B,EAAKmC,aAAe,CAClBhC,KAAM,IAGOH,YAER,IAAMoC,EAAS,sHCpDhBC,EAAY,aAYlB,SAASC,EAATrC,GAA2D,IAA5CmB,EAA4CnB,EAA5CmB,YAAaD,EAA+BlB,EAA/BkB,KAAMoB,EAAyBtC,EAAzBsC,KAAMjC,EAAmBL,EAAnBK,SAAUY,EAASjB,EAATiB,MAChD,OACEJ,EAAAC,EAAAC,cAACwB,EAAA,YAAD,CACEC,MAAOJ,EACPK,OAAQ,SAAAvC,GACN,IAAMwC,EACJvB,GAAejB,EAAKyC,KAAKC,aAAazB,YACxC,OACEN,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACEgC,eAAgB,CACd5B,QAEFD,MAAOA,EACP8B,cAAa,QAAU7C,EAAKyC,KAAKC,aAAa3B,MAC9CqB,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShC,GAEX,CACEiC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS/C,EAAKyC,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAAShC,GAEX,CACE+B,KAAI,sBACJC,QAASP,IAGVlC,OACCH,EAAS+C,OAAS,EACd,CACEJ,KAAI,WACJC,QAAS5C,EAASgD,KAAT,OAEX,IAEL7C,OAAO8B,MAtDlBpC,KAAAoD,IA8DJjB,EAAIH,aAAe,CACjBf,YAAa,GACbD,KAAI,KACJoB,KAAM,GACNjC,SAAU,IAGZgC,EAAIX,UAAY,CACdP,YAAaQ,IAAUE,OACvBX,KAAMS,IAAUE,OAChBS,KAAMX,IAAUM,QACdN,IAAUC,MAAM,CACdoB,KAAMrB,IAAUE,OAChBoB,QAAStB,IAAUE,UAGvBxB,SAAUsB,IAAUM,QAAQN,IAAUE,QACtCZ,MAAOU,IAAUE,OAAOC,YAGXO,8KCpGfkB,EAAAC,QAAA,CAAkBlC,KAAA,2BAAAL,MAAA,4BAAAM,KAAA","file":"component---src-templates-post-template-js-ee27eb99a0f62a669b74.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\n\nimport postStyles from '../styles/post.module.css'\n\nconst Post = ({ data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  const keywords = frontmatter.tags\n    .split(',')\n    .concat(frontmatter.category)\n    .map(item => item.trim())\n\n  return (\n    <div>\n      <SEO\n        title={frontmatter.title}\n        lang={frontmatter.lang}\n        description={frontmatter.description}\n        keywords={keywords}\n      />\n      <div className={postStyles.post}>\n        <h1 className={postStyles.title}>{frontmatter.title}</h1>\n        <p className={postStyles.date}>{frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </div>\n  )\n}\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      html: PropTypes.string.isRequired,\n      fields: PropTypes.shape({\n        slug: PropTypes.string.isRequired,\n      }),\n      frontmatter: PropTypes.shape({\n        category: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        lang: PropTypes.string.isRequired,\n        tags: PropTypes.arrayOf.PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nPost.defaultProps = {\n  data: {},\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        lang\n        category\n        tags\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post-module--post--28Mq2\",\"title\":\"post-module--title--3XBo2\",\"date\":\"post-module--date--1eM4d\"};"],"sourceRoot":""}