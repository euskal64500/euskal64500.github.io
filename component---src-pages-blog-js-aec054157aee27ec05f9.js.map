{"version":3,"sources":["webpack:///./src/components/blog-menu.js","webpack:///./src/components/blog-list.js","webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/header.module.css","webpack:///./src/styles/layout.module.css","webpack:///./src/components/seo.js","webpack:///./src/components/blog-card.js","webpack:///./src/styles/blog.module.css","webpack:///./src/styles/blog-card.module.css","webpack:///./src/styles/blog-menu.module.css","webpack:///./src/styles/blog-list.module.css"],"names":["BlogMenu","props","_this","_React$Component","call","this","onSelection","bind","assertThisInitialized_default","state","activeCategory","categorySelected","setState","onSelect","render","_this2","react_default","a","createElement","className","blogNavStyles","nav","categories","map","category","index","key","activeButton","button","onClick","React","Component","propTypes","PropTypes","arrayOf","string","defaultProps","BlogList","_ref","Posts","posts","post","blog_card","id","title","date","description","blogListStyles","edges","object","BlogPage","_this$props$data","data","listOfCategories","distinct","blogs","edge","node","author","frontmatter","path","results","filter","concat","layout","seo","blogStyles","page","blog","blog_list","blog_menu","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","isRequired","func","m","module","exports","require","default","Header","siteTitle","menuLinks","headerStyles","menu","link","gatsby_browser_entry","activeClassName","activeLink","to","text","name","Layout","layoutStyles","site","banner","header","siteMetadata","content","_3436215879","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","_styles_blog_card_module_css__WEBPACK_IMPORTED_MODULE_2__","_styles_blog_card_module_css__WEBPACK_IMPORTED_MODULE_2___default","BlogCard","blogCardStyles","card"],"mappings":"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","file":"component---src-pages-blog-js-aec054157aee27ec05f9.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport blogNavStyles from '../styles/blog-menu.module.css'\n\nclass BlogMenu extends React.Component {\n\n  constructor( props ) {\n    super(props);\n    this.onSelection = this.onSelection.bind(this);\n    this.state = { activeCategory: '' };\n  }\n\n  onSelection(categorySelected) {\n    this.setState({\n      activeCategory: categorySelected\n    });\n    this.props.onSelect(categorySelected);\n  }\n\n  render() {\n    return (\n      <nav className={ blogNavStyles.nav }>\n      {\n        this.props.categories.map((category, index) => \n          <button \n            key={ index } \n            className={ this.state.activeCategory === category ? blogNavStyles.activeButton : blogNavStyles.button } \n            onClick={ () => this.onSelection(category) }\n          >\n            { category }\n          </button>\n        )\n      }\n      </nav>\n    )\n  }\n}\n\nBlogMenu.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string),\n}\n\nBlogMenu.defaultProps = {\n  categories: []\n}\n\nexport default BlogMenu\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport BlogCard from './blog-card'\nimport blogListStyles from '../styles/blog-list.module.css'\n\nconst BlogList = ({ posts }) => {\n  const Posts = posts\n    .map(post => <BlogCard \n                    key={ post.id }\n                    category={ post.category }\n                    title={ post.title }\n                    date={ post.date }\n                    description={ post.description }\n                  />\n        )\n\n  return <div className={ blogListStyles.posts }>{ Posts }</div>\n};\n\nBlogList.propTypes = {\n  edges: PropTypes.arrayOf(PropTypes.object),\n}\n\nBlogList.defaultProps = {\n  edges: {},\n}\n\nexport default BlogList\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BlogMenu from \"../components/blog-menu\"\nimport BlogList from \"../components/blog-list\"\nimport blogStyles from '../styles/blog.module.css'\n\n\nclass BlogPage extends React.Component {\n  constructor( props ) {\n    super(props);\n    this.state = {\n      activeCategory: ''\n    }\n    this.onSelect = this.onSelect.bind(this);\n  }\n\n  onSelect( category ) {\n    this.setState({\n      activeCategory: category\n    });\n  }\n\n  render() {\n    let {\n      data: {\n        categories: { distinct: listOfCategories },\n        blogs: { edges },\n      }\n    } = this.props;\n\n    const posts = edges.map(edge => {\n      let frontmatter = {\n        id: edge.node.id,\n        author: edge.node.frontmatter.author,\n        date: edge.node.frontmatter.date,\n        category: edge.node.frontmatter.category,\n        title: edge.node.frontmatter.title,\n        description: edge.node.frontmatter.description,\n        path: edge.node.frontmatter.path\n      }\n      return frontmatter;\n    });\n\n    let results = {};\n    if (!!this.state.activeCategory) {\n      results = posts.filter(post => post.category === this.state.activeCategory)\n    } else {\n      results = [...posts];\n    }\n\n    return (\n      <Layout>\n        <SEO title=\"Blog\" />\n        <div className={ blogStyles.page }>\n          <div className={ blogStyles.blog }>\n            <BlogList posts={ results }/>\n          </div>\n          <div className={ blogStyles.categories }>\n            <BlogMenu categories={ listOfCategories } onSelect={this.onSelect}/>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\nquery {\n  categories:allMarkdownRemark{\n    distinct(field: frontmatter___category)\n  }\n  paths: allMarkdownRemark{\n    distinct(field: frontmatter___path)\n  }\n  blogs: allMarkdownRemark(\n    sort: { order: DESC, fields: [frontmatter___date] }\n  )\n  {\n    edges {\n      node {\n        id\n        frontmatter {\n          author\n          date(formatString: \"MMMM DD, YYYY\")\n          category\n          title\n          description\n          path\n        }\n      }\n    }\n  }\n}\n`\n\nexport default BlogPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Link } from 'gatsby'\n\nimport headerStyles from '../styles/header.module.css'\n\nconst Header = ({ siteTitle, menuLinks }) => (\n  <nav className={ headerStyles.menu }>\n  {\n    menuLinks.map((link, index) => \n      <Link \n        key={ index }\n        activeClassName={ headerStyles.activeLink }\n        className={ headerStyles.link } \n        to={ link.link }\n      >\n        <p className={ headerStyles.text }>{ link.name }</p>\n      </Link>\n    )\n  }\n  </nav>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  menuLinks: PropTypes.arrayOf(PropTypes.object),\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  menuLinks: []\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nimport layoutStyles from '../styles/layout.module.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            menuLinks {\n              name\n              link\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className={ layoutStyles.site }>\n        <div className={ layoutStyles.banner }>\n          <div className={ layoutStyles.header }>\n            <Header\n              menuLinks={data.site.siteMetadata.menuLinks} \n              siteTitle={data.site.siteMetadata.title}\n            />\n          </div>\n        </div>\n        <div className={ layoutStyles.content }>\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"header-module--menu--15oJi\",\"activeLink\":\"header-module--activeLink--2YKR8\",\"text\":\"header-module--text--3UAQj\",\"link\":\"header-module--link--3k-9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"layout-module--banner--1X862\",\"header\":\"layout-module--header--aabB-\",\"content\":\"layout-module--content--3B0uJ\",\"site\":\"layout-module--site--1G-CH\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport blogCardStyles from '../styles/blog-card.module.css'\n\nconst BlogCard = ({ category, title, date, description }) => {\n  const since = 2;\n\n  return (\n    <div className={ blogCardStyles.card }>\n      <p className={ blogCardStyles.category }>{ `${category} - posted ${since} hours ago` }</p>\n      <h1 className={ blogCardStyles.title }>{ title }</h1>\n      <p className={ blogCardStyles.description }>{ description }</p>\n    </div>\n  )\n}\n\nBlogCard.propTypes = {\n  category: PropTypes.string,\n  title: PropTypes.string,\n  date: PropTypes.string,\n  description: PropTypes.string,\n}\n\nBlogCard.defaultProps = {\n  category: 'Lorem Ipsum',\n  title: 'Lorem Ipsum',\n  date: 'Lorem Ipsum',\n  description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n}\n\nexport default BlogCard","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"blog-module--page--2b4HF\",\"blog\":\"blog-module--blog--2HMjS\",\"categories\":\"blog-module--categories--1-Ty1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"blog-card-module--card--3l_kN\",\"category\":\"blog-card-module--category--1IXve\",\"title\":\"blog-card-module--title--11Y9T\",\"description\":\"blog-card-module--description--2xkv2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"blog-menu-module--nav--2H-hP\",\"activeButton\":\"blog-menu-module--activeButton---m_pI\",\"button\":\"blog-menu-module--button--2-cpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"blog-list-module--posts--2n5ef\"};"],"sourceRoot":""}