{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/seo.js","webpack:///./src/styles/blog-post.module.css","webpack:///./src/components/blog-post.js"],"names":["BlogPage","_ref","edges","data","blogs","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","map","_ref2","index","node","_components_blog_post__WEBPACK_IMPORTED_MODULE_4__","Object","assign","key","frontmatter","propTypes","pageContext","PropTypes","shape","category","string","isRequired","arrayOf","date","path","description","pageQuery","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","module","exports","post","BlogPost","react__WEBPACK_IMPORTED_MODULE_2___default","className","blogPostStyles","card","gatsby__WEBPACK_IMPORTED_MODULE_3__","link","to"],"mappings":"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","file":"component---src-pages-blog-js-86a4288535b226f8f455.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport BlogPost from '../components/blog-post'\n\n\nconst BlogPage = ({ data }) => {\n  const { edges } = data.blogs;\n  return (\n    <div>\n      <SEO title=\"Blog\" />\n      <div>\n        { \n          edges.map(({ node }, index) => (\n            <BlogPost key={ index } { ...node.frontmatter } />\n          ))\n        }\n      </div>\n    </div>\n  )\n};\n\nBlogPage.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    blogs: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              category: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              description: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\nquery {\n  blogs: allMarkdownRemark(\n    sort: { order: DESC, fields: [frontmatter___date] }\n  )\n  {\n    edges {\n      node {\n        id\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          category\n          title\n          description\n          path\n        }\n      }\n    }\n  }\n}\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"blog-post-module--post--2_FpR\",\"title\":\"blog-post-module--title--11VLK\",\"date\":\"blog-post-module--date--3QSo1\"};","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport blogPostStyles from '../styles/blog-post.module.css'\n\nconst BlogPost = ({ category, title, date, description, path }) => {\n  const since = 2;\n\n  return (\n    <div className={ blogPostStyles.card }>\n      <Link className={ blogPostStyles.link } to={ path }>\n        <p className={ blogPostStyles.category }>{ `${category} - posted ${since} hours ago` }</p>\n        <h1 className={ blogPostStyles.title }>{ title }</h1>\n        <p className={ blogPostStyles.description }>{ description }</p>\n      </Link>\n    </div>\n  )\n}\n\nBlogPost.propTypes = {\n  category: PropTypes.string,\n  title: PropTypes.string,\n  date: PropTypes.string,\n  description: PropTypes.string,\n  path: PropTypes.string,\n}\n\nBlogPost.defaultProps = {\n  category: 'Lorem Ipsum',\n  title: 'Lorem Ipsum',\n  date: 'Lorem Ipsum',\n  description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n}\n\nexport default BlogPost"],"sourceRoot":""}