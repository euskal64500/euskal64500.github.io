{"version":3,"sources":["webpack:///./src/games/mastermind/components/feedback-list.js","webpack:///./src/games/mastermind/containers/feedback-list-container.js","webpack:///./src/games/mastermind/state/actions.js","webpack:///./src/games/mastermind/components/peg.js","webpack:///./src/games/mastermind/containers/guess-peg-container.js","webpack:///./src/games/mastermind/components/guess.js","webpack:///./src/games/mastermind/containers/guess-container.js","webpack:///./src/games/mastermind/components/guess-list.js","webpack:///./src/games/mastermind/containers/guess-list-container.js","webpack:///./src/games/mastermind/components/shield.js","webpack:///./src/games/mastermind/containers/shield-container.js","webpack:///./src/games/mastermind/components/board.js","webpack:///./src/games/mastermind/state/reducers.js","webpack:///./src/games/mastermind/components/mastermind.js","webpack:///./src/games/mastermind/state/createStore.js","webpack:///./src/pages/games.js","webpack:///./src/components/seo.js","webpack:///./src/games/mastermind/styles/board.module.css","webpack:///./src/games/mastermind/styles/feedback-list.module.css","webpack:///./src/games/mastermind/styles/peg.module.css","webpack:///./src/games/mastermind/styles/guess-list.module.css","webpack:///./src/games/mastermind/styles/shield.module.css","webpack:///./src/styles/game.module.css"],"names":["FeedbackList","_ref","ids","react_default","a","createElement","className","style","container","map","id","propTypes","PropTypes","arrayOf","number","defaultProps","getFeedbackIds","feedbacks","Object","keys","filter","value","aString","Number","isNaN","parseInt","FeedbackListContainer","connect","state","COLORS","changePegColor","pegNum","newColor","type","color","nextPegColor","dispatch","getState","prevIndexColor","indexOf","newIndexColor","length","nextColor","pegs","changeActiveRow","rowNum","changeFocus","focused","focus","updateStatus","outcome","status","result","batchActions","_len","arguments","actions","Array","_key","disableCurrentRow","activeRow","guesses","i","enable","apply","concat","enableNextRow","game","giveFeedback","array1","array2","feedbackColors","pegColors","isSolved","solution","code","reduce","prev","index","feedback","guess","_compareCodes","nbOfMatch","indexMatch","findMatchIndexes","arr1","includes","arr2","acc","e","incValue","compareCodes","match","misplaced","push","generateFeedback","pegIds","onUnlock","incomplete","some","Peg","bgColor","size","onPress","backgroundColor","onClick","disabled","largeCircle","smallCircle","isRequired","oneOf","brown","blue","yellow","green","gray","red","white","black","pink","orange","gold","ivory","transparent","bool","func","GuessPegContainer","ownProps","bindActionCreators","Guess","guess_peg_container","GuessContainer","guessId","GuessList","guess_container","key","getGuessIds","GuessListContainer","Shield","open","string","ShieldContainer","Board","boardStyle","board","play","feedback_list_container","guess_list_container","empty","shield","shield_container","LEVEL","initialSettings","level","initialPegs","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","initialGuesses","complete","initialFeedbacks","initialPopup","show","initialSolution","initialGameStatus","mastermind","combineReducers","settings","action","_Object$assign","_Object$assign2","assign","_Object$assign3","popup","store","reduxCreateStore","reducer","batchingReducer","createStore","Mastermind","es","GamePage","gameStyle","seo","title","components_mastermind","detailsQuery","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","shape","module","exports"],"mappings":"qOAUMA,EAAe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,IAAH,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,WACnBN,EAAIO,IAAI,SAAAC,GAAE,OACTP,EAAAC,EAAAC,cAAA,SAAIK,OAKVV,EAAaW,UAAY,CACvBT,IAAKU,IAAUC,QAAQD,IAAUE,SAGnCd,EAAae,aAAe,CAAEb,IAAK,CAAC,EAAG,EAAG,EAAG,IAE9BF,QCnBTgB,EAAiB,SAAAC,GAErB,OADYC,OAAOC,KAAKF,GACbG,OAAO,SAAAC,GAAK,OAJPC,EAIqBD,GAJTE,OAAOC,MAAMD,OAAOE,SAASH,EAAS,KAAlD,IAAAA,KAcHI,EALeC,YAFN,SAAAC,GAAK,MAAK,CAAE1B,IAAKc,EAAeY,EAAMX,aAI5D,KAF4BU,CAG5B3B,YCdI6B,eAAS,CAAC,OAAQ,QAAS,OAAQ,OAAQ,QAAS,UAwE7CC,EAAiB,SAACC,EAAQC,GAAT,MAAuB,CACnDC,KAAM,eACNvB,GAAIqB,EACJG,MAAOF,IAGIG,EAAe,SAAAJ,GAAM,OAAI,SAACK,EAAUC,GAAa,IAEtDL,EA3EU,SAAAE,GAChB,IAAMI,EAAiBT,EAAOU,QAAQL,GAChCM,EACJF,IAAmBT,EAAOY,QAAoB,KAAVP,EAAe,EAAII,EAAiB,EAC1E,OAAOT,EAAOW,GAuEGE,CADCL,IAAWM,KAAKZ,GAA1BG,OAERE,EAASN,EAAeC,EAAQC,MAmBrBY,EAAkB,SAAAC,GAAM,MAAK,CACxCZ,KAAM,oBACNZ,MAAOwB,IA4BIC,EAAc,SAACD,EAAQE,GAAT,MAAsB,CAC/Cd,KAAM,eACNvB,GAAImC,EACJG,MAAOD,IAGIE,EAAe,SAAAC,GAAO,MAAK,CACtCjB,KAAM,gBACNkB,OAAQ,OACRC,OAAQF,IAGGG,EAAe,mBAAAC,EAAAC,UAAAd,OAAIe,EAAJ,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAIF,EAAJE,GAAAH,UAAAG,GAAA,MAAiB,CAC3CzB,KAAM,gBACNuB,YAmBWG,EAAoB,kBAAM,SAACvB,EAAUC,GAChD,IARwBQ,EAUXe,EAFCvB,IAEZwB,QAAWD,UAEbxB,GAZwBS,EAYJe,EAZc,SAACxB,EAAUC,GAC7C,IAEMmB,EAFQnB,IACOwB,QAAQhB,GAAQF,KACdlC,IAAI,SAAAqD,GAAC,MA3EO,CACnC7B,KAAM,uBACNvB,GAyE2CoD,EAxE3CC,QAAQ,KAyER3B,EAASiB,EAAYW,WAAZ,GAAalB,EAAYD,GAAQ,IAAjCoB,OAA4CT,UAW1CU,EAAgB,kBAAM,SAAC9B,EAAUC,GAC5C,IAzBuBQ,EAyBjBjB,EAAQS,IAEJc,EACNvB,EADFuC,KAAQhB,OAGGS,EACThC,EADFiC,QAAWD,UAGK,IAAdA,GAA8B,gBAAXT,GACrBf,EAASa,EAAa,WAGpBW,EAAY,GAAgB,gBAAXT,GAEnBf,GAvCqBS,EAsCrBe,GAAa,EAtCkB,SAACxB,EAAUC,GAC5C,IAEMmB,EAFQnB,IACOwB,QAAQhB,GAAQF,KACdlC,IAAI,SAAAqD,GAAC,MA5DM,CAClC7B,KAAM,uBACNvB,GA0D0CoD,EAzD1CC,QAAQ,KA0DR3B,EACEiB,EAAYW,WAAZ,GAAapB,EAAgBC,GAASC,EAAYD,GAAQ,IAA1DoB,OAAoET,UAmD3DY,EAAe,kBAAM,SAAChC,EAAUC,GAC3C,IAxLegC,EAAQC,EA0KWC,EAc5B3C,EAAQS,IAEDuB,EACThC,EADFiC,QAAWD,UAGPY,EADS5C,EAAMiC,QAAQD,GAAWjB,KACflC,IAAI,SAAAC,GAAE,OAAIkB,EAAMe,KAAKjC,GAAIwB,QAC5CuC,GA9LSJ,EA8LUG,EA9LFF,EA8La1C,EAAM8C,SAASC,KA7LnDN,EAAOO,OACL,SAACC,EAAMxD,EAAOyD,GAAd,OAAyBzD,IAAUiD,EAAOQ,IAAiBD,IAC3D,IA4LIE,EA1JiB,SAACC,EAAON,GAG/B,IAFA,IAAMtB,EAAS,GAD6B6B,EAzBzB,SAACZ,EAAQC,GAC5B,IAAIY,EAIEC,EAzBiB,SAACd,EAAQC,GAAT,OACvBD,EAAOO,OAAO,SAACC,EAAMxD,EAAOyD,GAE1B,OADgBzD,IAAUiD,EAAOQ,GAASD,EAAKZ,OAAOa,GAASD,GAE9D,IAqBgBO,CAAiBf,EAAQC,GAC5CY,EAAYC,EAAW1C,OAGvB,IAAM4C,EAAOhB,EAAOjD,OAAO,SAACC,EAAOyD,GAAR,OAAmBK,EAAWG,SAASR,KAC9DS,EAAOjB,EAAOlD,OAAO,SAACC,EAAOyD,GAAR,OAAmBK,EAAWG,SAASR,KAYhE,MAAO,CAACI,EARQG,EAAKT,OAAO,SAACY,EAAKnE,GAChC,IA7BwBoE,EA6BpBC,EAAWF,EAKf,OAJID,EAAKD,SAASjE,KA9BMoE,EA+BGpE,EAAzBkE,EAAmBA,EA/BenE,OAAO,SAAAC,GAAK,OAAIA,IAAUoE,IAgC5DC,GAAY,GAEPA,GACN,IAMwBC,CAAaX,EAAON,GAAxCkB,EAFqCX,EAAA,GAE9BY,EAF8BZ,EAAA,GAGnCnB,EAAI,EAAGA,EAAI8B,EAAO9B,GAAK,EAC9BV,EAAO0C,KAAK,SAEd,IAAK,IAAIhC,EAAI,EAAGA,EAAI+B,EAAW/B,GAAK,EAClCV,EAAO0C,KAAK,SAEd,IAAK,IAAIhC,EAAIV,EAAOX,OAAQqB,EA/Db,EA+D2BA,GAAK,EAC7CV,EAAO0C,KAAK,eAEd,OAAO1C,EA8IU2C,CAAiBvB,EAAW5C,EAAM8C,SAASC,MAC5DvC,GAtBkCmC,EAsBJQ,EAtBsB,SAAC3C,EAAUC,GAC/D,IAAMT,EAAQS,IAECuB,EACXhC,EADFX,UAAa2C,UAEToC,EAASpE,EAAMX,UAAU2C,GAAWjB,KACpC6B,EAAYwB,EAAOvF,IAAI,SAACC,EAAIoE,GAAL,OAAeP,EAAeO,KACrDtB,EAAUwC,EAAOvF,IAAI,SAACC,EAAIoE,GAAL,OACzBhD,EAAepB,EAAI8D,EAAUM,MAE/B1C,EAASiB,EAAYW,WAAZ,EAAgBR,OAarBiB,GACFrC,EAASa,EAAa,cA+CbgD,EAAW,kBAAM,SAAA7D,GACTA,EAjBe,SAACA,EAAUC,GAC7C,IAAMT,EAAQS,IAEDuB,EACThC,EADFiC,QAAWD,UAIPsC,EAFStE,EAAMiC,QAAQD,GAAWjB,KACflC,IAAI,SAAAqD,GAAC,OAAIlC,EAAMe,KAAKmB,GAAG5B,QACnBiE,KAC3B,SAAA9E,GAAK,MAAc,KAAVA,GAA0B,gBAAVA,IAK3B,OAHI6E,GACF9D,EAlJ2B,CAC7BH,KAAM,cAmJCiE,MAML9D,EAASuB,KACTvB,EAASgC,KACThC,EAAS8B,KACT9B,EAjD8B,SAACA,EAAUC,GAK5B,SAJDA,IAEZ8B,KAAQhB,QAGRf,EAhI6B,CAC/BH,KAAM,oBA2KJG,EAxC4B,SAACA,EAAUC,GACzC,IAAMT,EAAQS,IAEJc,EACNvB,EADFuC,KAAQhB,OAGAC,EACNxB,EADFuC,KAAQf,OAEK,SAAXD,GAAgC,YAAXC,GACvBhB,EA3H+B,CACjCH,KAAM,iBA6HS,SAAXkB,GAAgC,WAAXC,GACvBhB,EA3H8B,CAChCH,KAAM,wCC5FFmE,EAAM,SAAAnG,GAAA,IAAGS,EAAHT,EAAGS,GAAI2F,EAAPpG,EAAOoG,QAASC,EAAhBrG,EAAgBqG,KAAMvC,EAAtB9D,EAAsB8D,OAAQwC,EAA9BtG,EAA8BsG,QAA9B,OACVpG,EAAAC,EAAAC,cAAA,UACEK,GAAIA,EACJuB,KAAK,SACL1B,MAAO,CAAEiG,gBAAiBH,GAC1BI,QAASF,GAAW,KACpBG,UAAW3C,EACXzD,UAAoB,UAATgG,EAAmB/F,IAAMoG,YAAcpG,IAAMqG,eAI5DR,EAAIzF,UAAY,CACdD,GAAIE,IAAUE,OAAO+F,WACrBR,QAASzF,IAAUkG,MAAM5F,OAAOC,KA9BhB,CAChB4F,MAAO,QACPC,KAAM,YACNC,OAAQ,cACRC,MAAO,aACPC,KAAM,OACNC,IAAK,SACLC,MAAO,QACPC,MAAO,QACPC,KAAM,UACNC,OAAQ,SACRC,KAAM,OACNC,MAAO,QACPC,YAAa,iBAkBb5D,OAAQnD,IAAUgH,KAClBtB,KAAM1F,IAAUkG,MAAM,QAAS,SAC/BP,QAAS3F,IAAUiH,MAGrBzB,EAAIrF,aAAe,CACjBgD,QAAQ,EACRsC,QAAS,cACTC,KAAM,QACNC,QAAS,MAGIH,QClCA0B,EALWnG,YAVF,SAACC,EAAOmG,GAAR,MAAsB,CAC5CrH,GAAIqH,EAASrH,GACb2F,QAASzE,EAAMe,KAAKoF,EAASrH,IAAIwB,MACjC6B,OAAQnC,EAAMe,KAAKoF,EAASrH,IAAIqD,OAChCuC,KAAM1E,EAAMe,KAAKoF,EAASrH,IAAI4F,OAGL,SAAClE,EAAU2F,GAAX,OACzBC,YAAmB,CAAEzB,QAAS,kBAAMpE,EAAa4F,EAASrH,MAAO0B,IAEzCT,CAGxByE,GCRI6B,EAAQ,SAAAhI,GAAA,IAAG+F,EAAH/F,EAAG+F,OAAH/F,EAAW8C,QAAX,OACZ5C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6H,EAAD,CAAmBxH,GAAIsF,EAAO,KAC9B7F,EAAAC,EAAAC,cAAC6H,EAAD,CAAmBxH,GAAIsF,EAAO,KAC9B7F,EAAAC,EAAAC,cAAC6H,EAAD,CAAmBxH,GAAIsF,EAAO,KAC9B7F,EAAAC,EAAAC,cAAC6H,EAAD,CAAmBxH,GAAIsF,EAAO,OAIlCiC,EAAMlH,aAAe,CAAEiF,OAAQ,CAAC,EAAG,EAAG,EAAG,GAAIjD,SAAS,GAEtDkF,EAAMtH,UAAY,CAChBqF,OAAQpF,IAAUC,QAAQD,IAAUE,QACpCiC,QAASnC,IAAUgH,MAGNK,QCZAE,EALQxG,YANC,SAACC,EAAOmG,GAAR,MAAsB,CAC5CK,QAASL,EAASrH,GAClBsF,OAAQpE,EAAMiC,QAAQkE,EAASrH,IAAIiC,KACnCI,QAASnB,EAAMiC,QAAQkE,EAASrH,IAAIqC,UAKpC,KAFqBpB,CAGrBsG,qBCPII,EAAY,SAAApI,GAAA,IAAGC,EAAHD,EAAGC,IAAH,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,WACnBN,EAAIO,IAAI,SAAAC,GAAE,OACTP,EAAAC,EAAAC,cAACiI,EAAD,CAAgBC,IAAK7H,GAAKA,OAKhC2H,EAAU1H,UAAY,CACpBT,IAAKU,IAAUC,QAAQD,IAAUE,SAGnCuH,EAAUtH,aAAe,CAAEb,IAAK,CAAC,EAAG,EAAG,EAAG,IAE3BmI,QCdTG,EAAc,SAAA3E,GAElB,OADY3C,OAAOC,KAAK0C,GACbzC,OAAO,SAAAC,GAAK,OAJPC,EAIqBD,GAJTE,OAAOC,MAAMD,OAAOE,SAASH,EAAS,KAAlD,IAAAA,KAcHmH,EALY9G,YAFH,SAAAC,GAAK,MAAK,CAAE1B,IAAKsI,EAAY5G,EAAMiC,WAIzD,KAFyBlC,CAGzB0G,qBCLIK,EAAS,SAAAzI,GAAA,IAAG0I,EAAH1I,EAAG0I,KAAMhE,EAAT1E,EAAS0E,KAAMsB,EAAfhG,EAAegG,SAAf,OACb9F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,WACnBmE,EAAKlE,IAAI,SAAAyB,GAAK,OACb/B,EAAAC,EAAAC,cAAA,SAAI6B,KAEN/B,EAAAC,EAAAC,cAAA,SAAIsI,EAAO,OAAS,SACpBxI,EAAAC,EAAAC,cAAA,UAAQ4B,KAAK,SAASwE,QAASR,GAA/B,WAMJyC,EAAO3H,aAAe,CACpB4H,MAAM,EACNhE,KAAM,CAAC,GAAI,GAAI,GAAI,IACnBsB,SAAU,MAGZyC,EAAO/H,UAAY,CACjBgI,KAAM/H,IAAUgH,KAChBjD,KAAM/D,IAAUC,QAAQD,IAAUgI,QAClC3C,SAAUrF,IAAUiH,MAGPa,QChBAG,EALSlH,YARA,SAAAC,GAAK,MAAK,CAChC+G,KAAM/G,EAAM8C,SAASiE,KACrBhE,KAAM/C,EAAM8C,SAASC,OAGI,SAAAvC,GAAQ,OACjC4F,YAAmB,CAAE/B,YAAY7D,IAEXT,CAGtB+G,GCSaI,EAnBD,kBACZ3I,EAAAC,EAAAC,cAAA,OAAKC,UAAWyI,IAAWC,OACzB7I,EAAAC,EAAAC,cAAA,OAAKC,UAAWyI,IAAWE,MACzB9I,EAAAC,EAAAC,cAAA,OAAKC,UAAWyI,IAAWhE,UACzB5E,EAAAC,EAAAC,cAAC6I,EAAD,OAEF/I,EAAAC,EAAAC,cAAA,OAAKC,UAAWyI,IAAW/D,OACzB7E,EAAAC,EAAAC,cAAC8I,EAAD,QAGJhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWyI,IAAWrE,UACzBvE,EAAAC,EAAAC,cAAA,OAAKC,UAAWyI,IAAWK,QAC3BjJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWyI,IAAWM,QACzBlJ,EAAAC,EAAAC,cAACiJ,EAAD,UChBFC,SACE,QAOFC,EAAkB,CAAEC,MAAOF,GAG3BG,EAAc,CAClBC,EAAG,CAAEjJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACvDsD,EAAG,CAAElJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACvDuD,EAAG,CAAEnJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACvDwD,EAAG,CAAEpJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEvDyD,EAAG,CAAErJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACvD0D,EAAG,CAAEtJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACvD2D,EAAG,CAAEvJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACvD4D,EAAG,CAAExJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEvD6D,EAAG,CAAEzJ,GAAI,EAAGqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACvD8D,GAAI,CAAE1J,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD+D,GAAI,CAAE3J,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDgE,GAAI,CAAE5J,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDiE,GAAI,CAAE7J,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDkE,GAAI,CAAE9J,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDmE,GAAI,CAAE/J,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDoE,GAAI,CAAEhK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDqE,GAAI,CAAEjK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDsE,GAAI,CAAElK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDuE,GAAI,CAAEnK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDwE,GAAI,CAAEpK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDyE,GAAI,CAAErK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD0E,GAAI,CAAEtK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD2E,GAAI,CAAEvK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD4E,GAAI,CAAExK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzD6E,GAAI,CAAEzK,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD8E,GAAI,CAAE1K,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD+E,GAAI,CAAE3K,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDgF,GAAI,CAAE5K,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDiF,GAAI,CAAE7K,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDkF,GAAI,CAAE9K,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDmF,GAAI,CAAE/K,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDoF,GAAI,CAAEhL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDqF,GAAI,CAAEjL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDsF,GAAI,CAAElL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDuF,GAAI,CAAEnL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDwF,GAAI,CAAEpL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDyF,GAAI,CAAErL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD0F,GAAI,CAAEtL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD2F,GAAI,CAAEvL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD4F,GAAI,CAAExL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzD6F,GAAI,CAAEzL,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD8F,GAAI,CAAE1L,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD+F,GAAI,CAAE3L,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDgG,GAAI,CAAE5L,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDiG,GAAI,CAAE7L,GAAI,GAAIqD,QAAQ,EAAM7B,MAAO,cAAeoE,KAAM,SACxDkG,GAAI,CAAE9L,GAAI,GAAIqD,QAAQ,EAAM7B,MAAO,cAAeoE,KAAM,SACxDmG,GAAI,CAAE/L,GAAI,GAAIqD,QAAQ,EAAM7B,MAAO,cAAeoE,KAAM,SACxDoG,GAAI,CAAEhM,GAAI,GAAIqD,QAAQ,EAAM7B,MAAO,cAAeoE,KAAM,SAExDqG,GAAI,CAAEjM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDsG,GAAI,CAAElM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDuG,GAAI,CAAEnM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDwG,GAAI,CAAEpM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDyG,GAAI,CAAErM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD0G,GAAI,CAAEtM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD2G,GAAI,CAAEvM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD4G,GAAI,CAAExM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzD6G,GAAI,CAAEzM,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD8G,GAAI,CAAE1M,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD+G,GAAI,CAAE3M,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDgH,GAAI,CAAE5M,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDiH,GAAI,CAAE7M,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDkH,GAAI,CAAE9M,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDmH,GAAI,CAAE/M,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDoH,GAAI,CAAEhN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDqH,GAAI,CAAEjN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDsH,GAAI,CAAElN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDuH,GAAI,CAAEnN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDwH,GAAI,CAAEpN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDyH,GAAI,CAAErN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD0H,GAAI,CAAEtN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD2H,GAAI,CAAEvN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD4H,GAAI,CAAExN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzD6H,GAAI,CAAEzN,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD8H,GAAI,CAAE1N,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD+H,GAAI,CAAE3N,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDgI,GAAI,CAAE5N,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDiI,GAAI,CAAE7N,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDkI,GAAI,CAAE9N,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDmI,GAAI,CAAE/N,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDoI,GAAI,CAAEhO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDqI,GAAI,CAAEjO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDsI,GAAI,CAAElO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDuI,GAAI,CAAEnO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDwI,GAAI,CAAEpO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDyI,GAAI,CAAErO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD0I,GAAI,CAAEtO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD2I,GAAI,CAAEvO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD4I,GAAI,CAAExO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzD6I,GAAI,CAAEzO,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD8I,GAAI,CAAE1O,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzD+I,GAAI,CAAE3O,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDgJ,GAAI,CAAE5O,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SAEzDiJ,GAAI,CAAE7O,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDkJ,GAAI,CAAE9O,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDmJ,GAAI,CAAE/O,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,SACzDoJ,GAAI,CAAEhP,GAAI,GAAIqD,QAAQ,EAAO7B,MAAO,cAAeoE,KAAM,UAGrDqJ,EAAiB,CACrB/L,UAAW,GACX+F,EAAG,CAAEjJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,EAAG,EAAG,EAAG,GAAII,SAAS,GAC1D6G,EAAG,CAAElJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,EAAG,EAAG,EAAG,GAAII,SAAS,GAC1D8G,EAAG,CAAEnJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,EAAG,GAAI,GAAI,IAAKI,SAAS,GAC7D+G,EAAG,CAAEpJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,GAC9DgH,EAAG,CAAErJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,GAC9DiH,EAAG,CAAEtJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,GAC9DkH,EAAG,CAAEvJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,GAC9DmH,EAAG,CAAExJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,GAC9DoH,EAAG,CAAEzJ,GAAI,EAAGkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,GAC9DqH,GAAI,CAAE1J,GAAI,GAAIkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,GAChEsH,GAAI,CAAE3J,GAAI,GAAIkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,GAChEuH,GAAI,CAAE5J,GAAI,GAAIkP,UAAU,EAAOjN,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKI,SAAS,IAG5D8M,EAAmB,CACvBjM,UAAW,GACX+F,EAAG,CAAEjJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BiH,EAAG,CAAElJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BkH,EAAG,CAAEnJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BmH,EAAG,CAAEpJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BoH,EAAG,CAAErJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BqH,EAAG,CAAEtJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BsH,EAAG,CAAEvJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BuH,EAAG,CAAExJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BwH,EAAG,CAAEzJ,GAAI,EAAGiC,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/ByH,GAAI,CAAE1J,GAAI,GAAIiC,KAAM,CAAC,GAAI,GAAI,GAAI,KACjC0H,GAAI,CAAE3J,GAAI,GAAIiC,KAAM,CAAC,GAAI,GAAI,GAAI,KACjC2H,GAAI,CAAE5J,GAAI,GAAIiC,KAAM,CAAC,GAAI,GAAI,GAAI,MAI7BmN,GAAe,CACnBC,MAAM,EACN9N,KAAM,WAqCF+N,GAAkB,CACtBrH,MAAM,EACNhE,KAAa,CAAC,OAAQ,OAAQ,OAAQ,UAGlCsL,GAAoB,CACxB9M,OAAQ,cACRC,OAAQ,IAwJG8M,GAAaC,YAAgB,CACxCC,SAtJqB,SAACxO,EAAyByO,GAC/C,YAD0D,IAApCzO,MAAQ4H,GACtB6G,EAAOpO,MACb,IAAK,eACH,MAAO,CAAEwH,MAAO4G,EAAOhP,OACzB,IAAK,QACH,OAAOmI,EACT,QACE,OAAO5H,IAgJXe,KA5IgB,SAACf,EAAqByO,GAAW,IAAAC,EAAAC,EACjD,YADiD,IAAhC3O,MAAQ8H,GACjB2G,EAAOpO,MACb,IAAK,eACH,OAAAf,OAAAsP,OAAA,GACK5O,IADL0O,EAAA,IAEGD,EAAO3P,IAFVQ,OAAAsP,OAAA,GAGO5O,EAAMyO,EAAO3P,IAHpB,CAIIwB,MAAOmO,EAAOnO,QAJlBoO,IAOF,IAAK,uBACH,OAAApP,OAAAsP,OAAA,GACK5O,IADL2O,EAAA,IAEGF,EAAO3P,IAFVQ,OAAAsP,OAAA,GAGO5O,EAAMyO,EAAO3P,IAHpB,CAIIqD,OAAQsM,EAAOtM,SAJnBwM,IAOF,IAAK,QACH,OAAO7G,EACT,QACE,OAAO9H,IAwHXiC,QApHkB,SAACjC,EAAwByO,GAAW,IAAAI,EACtD,YADsD,IAAnC7O,MAAQ+N,GACnBU,EAAOpO,MACb,IAAK,oBACH,OAAAf,OAAAsP,OAAA,GACK5O,EADL,CAEEgC,UAAWyM,EAAOhP,QAEtB,IAAK,eACH,OAAAH,OAAAsP,OAAA,GACK5O,IADL6O,EAAA,IAEGJ,EAAO3P,IAFVQ,OAAAsP,OAAA,GAGO5O,EAAMyO,EAAO3P,IAHpB,CAIIqC,QAASsN,EAAOrN,QAJpByN,IAOF,IAAK,QACH,OAAOd,EACT,QACE,OAAO/N,IAmGXX,UA/FqB,SAACW,EAA0ByO,GAChD,YAD2D,IAArCzO,MAAQiO,GACtBQ,EAAOpO,MACb,IAAK,oBACH,OAAAf,OAAAsP,OAAA,GACK5O,EADL,CAEEgC,UAAWyM,EAAOhP,QAEtB,IAAK,QACH,OAAOwO,EACT,QACE,OAAOjO,IAsFX8O,MAlFkB,SAAC9O,EAAsByO,GACzC,YADoD,IAAjCzO,MAAQkO,IACnBO,EAAOpO,MACb,IAAK,YACH,OAAAf,OAAAsP,OAAA,GACK5O,EADL,CAEEmO,MAAM,EACN9N,KAAM,SAEV,IAAK,eACH,OAAAf,OAAAsP,OAAA,GACK5O,EADL,CAEEmO,MAAM,EACN9N,KAAM,YAEV,IAAK,eACH,OAAAf,OAAAsP,OAAA,GACK5O,EADL,CAEEmO,MAAM,EACN9N,KAAM,YAEV,IAAK,QACH,OAAAf,OAAAsP,OAAA,GACK5O,EADL,CAEEmO,MAAM,EACN9N,KAAM,SAEV,IAAK,QACH,OAAO6N,GACT,QACE,OAAOlO,IAsDX8C,SAlDqB,SAAC9C,EAAyByO,GAC/C,YAD0D,IAApCzO,MAAQoO,IACtBK,EAAOpO,MACb,IAAK,gBACH,OAAAf,OAAAsP,OAAA,GACK5O,EADL,CAEE+G,MAAM,IAEV,IAAK,gBACH,OAAAzH,OAAAsP,OAAA,GACK5O,EADL,CAEE+G,MAAM,IAEV,IAAK,QACH,OAAOqH,GACT,QACE,OAAOpO,IAoCXuC,KAhCmB,SAACvC,EAA2ByO,GAC/C,YAD0D,IAAtCzO,MAAQqO,IACpBI,EAAOpO,MACb,IAAK,gBACH,OAAAf,OAAAsP,OAAA,GACK5O,EADL,CAEEuB,OAAQkN,EAAOlN,OACfC,OAAQiN,EAAOjN,SAEnB,IAAK,QACH,OAAO6M,GACT,QACE,OAAOrO,MC5VP+O,GCFc,kBAAMC,aFkWIC,EElW4BX,GFmWxD,SAASY,EAAgBlP,EAAOyO,GAC9B,OAAQA,EAAOpO,MACb,IAAK,gBACH,OAAOoO,EAAO7M,QAAQoB,OAAOkM,EAAiBlP,GAChD,QACE,OAAOiP,EAAQjP,EAAOyO,OANA,IAAAQ,EChWhBE,GAQCC,GANI,kBACjB7Q,EAAAC,EAAAC,cAAC4Q,EAAA,EAAD,CAAUN,MAAOA,IACfxQ,EAAAC,EAAAC,cAAC2I,EAAD,6BEGWkI,UAPE,kBACf/Q,EAAAC,EAAAC,cAAA,OAAKC,UAAW6Q,KAAU3Q,WACxBL,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAKC,MAAM,eACXlR,EAAAC,EAAAC,cAACiR,GAAD,gHCHEC,EAAY,aAYlB,SAASC,EAATvR,GAA2D,IAA5CwR,EAA4CxR,EAA5CwR,YAAaC,EAA+BzR,EAA/ByR,KAAMC,EAAyB1R,EAAzB0R,KAAMC,EAAmB3R,EAAnB2R,SAAUP,EAASpR,EAAToR,MAChD,OACEQ,EAAAzR,EAAAC,cAACyR,EAAA,YAAD,CACEC,MAAOR,EACPS,OAAQ,SAAAC,GACN,IAAMC,EACJT,GAAeQ,EAAKE,KAAKC,aAAaX,YACxC,OACEI,EAAAzR,EAAAC,cAACgS,EAAAjS,EAAD,CACEkS,eAAgB,CACdZ,QAEFL,MAAOA,EACPkB,cAAa,QAAUN,EAAKE,KAAKC,aAAaf,MAC9CM,KAAM,CACJ,CACEa,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASpB,GAEX,CACEqB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASpB,GAEX,CACEmB,KAAI,sBACJC,QAASP,IAGVjO,OACC2N,EAASnP,OAAS,EACd,CACE+P,KAAI,WACJC,QAASb,EAASgB,KAAT,OAEX,IAEL3O,OAAO0N,MAtDlBM,KAAAY,IA8DJrB,EAAIzQ,aAAe,CACjB0Q,YAAa,GACbC,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAI7Q,UAAY,CACd8Q,YAAa7Q,IAAUgI,OACvB8I,KAAM9Q,IAAUgI,OAChB+I,KAAM/Q,IAAUC,QACdD,IAAUkS,MAAM,CACdN,KAAM5R,IAAUgI,OAChB6J,QAAS7R,IAAUgI,UAGvBgJ,SAAUhR,IAAUC,QAAQD,IAAUgI,QACtCyI,MAAOzQ,IAAUgI,OAAO/B,YAGX2K,8KCpGfuB,EAAAC,QAAA,CAAkBhK,MAAA,6BAAAC,KAAA,4BAAAvE,SAAA,gCAAAK,SAAA,gCAAAC,MAAA,6BAAAoE,MAAA,6BAAAC,OAAA,oDCAlB0J,EAAAC,QAAA,CAAkBxS,UAAA,+DCAlBuS,EAAAC,QAAA,CAAkBpM,YAAA,iCAAAD,YAAA,uDCAlBoM,EAAAC,QAAA,CAAkBxS,UAAA,4DCAlBuS,EAAAC,QAAA,CAAkBxS,UAAA,wDCAlBuS,EAAAC,QAAA,CAAkBxS,UAAA","file":"component---src-pages-games-js-26ee1d56240604943eda.js","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport style from '../styles/feedback-list.module.css'\n\nconst FeedbackList = ({ ids }) => (\n  <div className={style.container}>\n    {ids.map(id => (\n      <p>{id}</p>\n    ))}\n  </div>\n)\n\nFeedbackList.propTypes = {\n  ids: PropTypes.arrayOf(PropTypes.number),\n}\n\nFeedbackList.defaultProps = { ids: [1, 1, 1, 1] }\n\nexport default FeedbackList\n","import { connect } from 'react-redux'\nimport FeedbackList from '../components/feedback-list'\n\nconst isNumeric = aString => !Number.isNaN(Number.parseInt(aString, 10))\n\nconst getFeedbackIds = feedbacks => {\n  const ids = Object.keys(feedbacks)\n  return ids.filter(value => isNumeric(value))\n}\n\nconst mapStateToProps = state => ({ ids: getFeedbackIds(state.feedbacks) })\n\nconst FeedbackListContainer = connect(\n  mapStateToProps,\n  null\n)(FeedbackList)\n\nexport default FeedbackListContainer\n","// Possible colors to choose from the code\nconst COLORS = ['blue', 'green', 'gold', 'pink', 'ivory', 'brown']\n\n// Number of positions\nconst CODESIZE = 4\n\nconst nextColor = color => {\n  const prevIndexColor = COLORS.indexOf(color)\n  const newIndexColor =\n    prevIndexColor === COLORS.length || color === '' ? 0 : prevIndexColor + 1\n  return COLORS[newIndexColor]\n}\n\nconst findMatchIndexes = (array1, array2) =>\n  array1.reduce((prev, value, index) => {\n    const isMatch = value === array2[index] ? prev.concat(index) : prev\n    return isMatch\n  }, [])\n\nconst removeValue = (array, e) => array.filter(value => value !== e)\n\nconst matches = (array1, array2) =>\n  array1.reduce(\n    (prev, value, index) => (value !== array2[index] ? false : prev),\n    true\n  )\n\n/**\n * Compares codes in 2 arrays\n * @param {Array} first array\n * @param {Array} second array\n * @returns {Array} Returns the number of correctly placed pegs and misplaced pegs\n */\nconst compareCodes = (array1, array2) => {\n  let nbOfMatch = 0\n  let nbOfMisplaced = 0\n\n  // find matching indexes\n  const indexMatch = findMatchIndexes(array1, array2)\n  nbOfMatch = indexMatch.length\n\n  // remove matching elements\n  const arr1 = array1.filter((value, index) => !indexMatch.includes(index))\n  let arr2 = array2.filter((value, index) => !indexMatch.includes(index))\n\n  // count misplaced elements\n  // removes element from reference array every time a match is found\n  nbOfMisplaced = arr1.reduce((acc, value) => {\n    let incValue = acc\n    if (arr2.includes(value)) {\n      arr2 = removeValue(arr2, value)\n      incValue += 1\n    }\n    return incValue\n  }, 0)\n  return [nbOfMatch, nbOfMisplaced]\n}\n\nconst generateFeedback = (guess, solution) => {\n  const result = []\n  const [match, misplaced] = compareCodes(guess, solution)\n  for (let i = 0; i < match; i += 1) {\n    result.push('black')\n  }\n  for (let i = 0; i < misplaced; i += 1) {\n    result.push('white')\n  }\n  for (let i = result.length; i < CODESIZE; i += 1) {\n    result.push('transparent')\n  }\n  return result\n}\n\nexport const changePegColor = (pegNum, newColor) => ({\n  type: 'UPDATE_COLOR',\n  id: pegNum,\n  color: newColor,\n})\n\nexport const nextPegColor = pegNum => (dispatch, getState) => {\n  const { color } = getState().pegs[pegNum]\n  const newColor = nextColor(color)\n  dispatch(changePegColor(pegNum, newColor))\n}\n\nexport const disablePeg = pegNum => ({\n  type: 'UPDATE_ACTIONABILITY',\n  id: pegNum,\n  enable: false,\n})\n\nexport const enablePeg = pegNum => ({\n  type: 'UPDATE_ACTIONABILITY',\n  id: pegNum,\n  enable: true,\n})\n\nexport const openShield = () => ({\n  type: 'SHOW_SOLUTION',\n})\n\nexport const changeActiveRow = rowNum => ({\n  type: 'UPDATE_ACTIVE_ROW',\n  value: rowNum,\n})\n\nexport const changeLevel = level => ({\n  type: 'CHANGE_LEVEL',\n  value: level,\n})\n\nexport const showHelp = () => ({\n  type: 'SHOW_HELP',\n})\n\nexport const showCongrats = () => ({\n  type: 'SHOW_SUCCESS',\n})\n\nexport const showFailure = () => ({\n  type: 'SHOW_FAILURE',\n})\n\nexport const closePopup = () => ({\n  type: 'CLOSE',\n})\n\nexport const reset = () => ({\n  type: 'RESET',\n})\n\nexport const changeFocus = (rowNum, focused) => ({\n  type: 'CHANGE_FOCUS',\n  id: rowNum,\n  focus: focused,\n})\n\nexport const updateStatus = outcome => ({\n  type: 'UPDATE_STATUS',\n  status: 'done',\n  result: outcome,\n})\n\nexport const batchActions = (...actions) => ({\n  type: 'BATCH_ACTIONS',\n  actions,\n})\n\nexport const enableRow = rowNum => (dispatch, getState) => {\n  const state = getState()\n  const pegIds = state.guesses[rowNum].pegs\n  const actions = pegIds.map(i => enablePeg(i))\n  dispatch(\n    batchActions(changeActiveRow(rowNum), changeFocus(rowNum, true), ...actions)\n  )\n}\n\nexport const disableRow = rowNum => (dispatch, getState) => {\n  const state = getState()\n  const pegIds = state.guesses[rowNum].pegs\n  const actions = pegIds.map(i => disablePeg(i))\n  dispatch(batchActions(changeFocus(rowNum, false), ...actions))\n}\n\nexport const disableCurrentRow = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    guesses: { activeRow },\n  } = state\n  dispatch(disableRow(activeRow))\n}\n\nexport const enableNextRow = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    game: { status },\n  } = state\n  let {\n    guesses: { activeRow },\n  } = state\n\n  if (activeRow === 1 && status === 'in progress') {\n    dispatch(updateStatus('failed'))\n  }\n\n  if (activeRow > 1 && status === 'in progress') {\n    activeRow -= 1\n    dispatch(enableRow(activeRow))\n  }\n}\n\nexport const changeFeedbackColors = feedbackColors => (dispatch, getState) => {\n  const state = getState()\n  const {\n    feedbacks: { activeRow },\n  } = state\n  const pegIds = state.feedbacks[activeRow].pegs\n  const pegColors = pegIds.map((id, index) => feedbackColors[index])\n  const actions = pegIds.map((id, index) =>\n    changePegColor(id, pegColors[index])\n  )\n  dispatch(batchActions(...actions))\n}\n\nexport const giveFeedback = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    guesses: { activeRow },\n  } = state\n  const pegIds = state.guesses[activeRow].pegs\n  const pegColors = pegIds.map(id => state.pegs[id].color)\n  const isSolved = matches(pegColors, state.solution.code)\n  const feedback = generateFeedback(pegColors, state.solution.code)\n  dispatch(changeFeedbackColors(feedback))\n  if (isSolved) {\n    dispatch(updateStatus('success'))\n  }\n}\n\nexport const showSolution = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    game: { status },\n  } = state\n  if (status === 'done') {\n    dispatch(openShield())\n  }\n}\n\nexport const showResult = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    game: { status },\n  } = state\n  const {\n    game: { result },\n  } = state\n  if (status === 'done' && result === 'success') {\n    dispatch(showCongrats())\n  }\n\n  if (status === 'done' && result === 'failed') {\n    dispatch(showFailure())\n  }\n}\n\nexport const isCodeComplete = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    guesses: { activeRow },\n  } = state\n  const pegIds = state.guesses[activeRow].pegs\n  const pegColors = pegIds.map(i => state.pegs[i].color)\n  const incomplete = pegColors.some(\n    value => value === '' || value === 'transparent'\n  )\n  if (incomplete) {\n    dispatch(showHelp())\n  }\n  return incomplete\n}\n\nexport const onUnlock = () => dispatch => {\n  const incomplete = dispatch(isCodeComplete())\n  if (!incomplete) {\n    dispatch(disableCurrentRow())\n    dispatch(giveFeedback())\n    dispatch(enableNextRow())\n    dispatch(showSolution())\n    dispatch(showResult())\n  }\n}\n","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport style from '../styles/peg.module.css'\n\n// color scheme: http://www.creativecolorschemes.com/resources/free-color-schemes/earth-tone-color-scheme.shtml\nconst pegColors = {\n  brown: 'brown', // '#B99C6B'\n  blue: 'lightblue',\n  yellow: 'lightyellow',\n  green: 'lightgreen',\n  gray: 'gray',\n  red: 'tomato',\n  white: 'white',\n  black: 'black',\n  pink: 'hotpink',\n  orange: 'orange',\n  gold: 'gold',\n  ivory: 'ivory',\n  transparent: 'transparent',\n}\n\n// eslint-disable-next-line object-curly-newline\nconst Peg = ({ id, bgColor, size, enable, onPress }) => (\n  <button\n    id={id}\n    type=\"submit\"\n    style={{ backgroundColor: bgColor }}\n    onClick={onPress || null}\n    disabled={!enable}\n    className={size === 'large' ? style.largeCircle : style.smallCircle}\n  />\n)\n\nPeg.propTypes = {\n  id: PropTypes.number.isRequired,\n  bgColor: PropTypes.oneOf(Object.keys(pegColors)),\n  enable: PropTypes.bool,\n  size: PropTypes.oneOf('large', 'small'),\n  onPress: PropTypes.func,\n}\n\nPeg.defaultProps = {\n  enable: false,\n  bgColor: 'transparent',\n  size: 'large',\n  onPress: null,\n}\n\nexport default Peg\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { nextPegColor } from '../state/actions'\nimport Peg from '../components/peg'\n\nconst mapStateToProps = (state, ownProps) => ({\n  id: ownProps.id,\n  bgColor: state.pegs[ownProps.id].color,\n  enable: state.pegs[ownProps.id].enable,\n  size: state.pegs[ownProps.id].size,\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) =>\n  bindActionCreators({ onPress: () => nextPegColor(ownProps.id) }, dispatch)\n\nconst GuessPegContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Peg)\n\nexport default GuessPegContainer\n","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport GuessPegContainer from '../containers/guess-peg-container'\n\nconst Guess = ({ pegIds, focused }) => (\n  <div>\n    <GuessPegContainer id={pegIds[0]} />\n    <GuessPegContainer id={pegIds[1]} />\n    <GuessPegContainer id={pegIds[2]} />\n    <GuessPegContainer id={pegIds[3]} />\n  </div>\n)\n\nGuess.defaultProps = { pegIds: [1, 2, 3, 4], focused: false }\n\nGuess.propTypes = {\n  pegIds: PropTypes.arrayOf(PropTypes.number),\n  focused: PropTypes.bool,\n}\n\nexport default Guess\n","import { connect } from 'react-redux'\nimport Guess from '../components/guess'\n\nconst mapStateToProps = (state, ownProps) => ({\n  guessId: ownProps.id,\n  pegIds: state.guesses[ownProps.id].pegs,\n  focused: state.guesses[ownProps.id].focused,\n})\n\nconst GuessContainer = connect(\n  mapStateToProps,\n  null\n)(Guess)\n\nexport default GuessContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GuessContainer from '../containers/guess-container'\nimport style from '../styles/guess-list.module.css'\n\nconst GuessList = ({ ids }) => (\n  <div className={style.container}>\n    {ids.map(id => (\n      <GuessContainer key={id}>{id}</GuessContainer>\n    ))}\n  </div>\n)\n\nGuessList.propTypes = {\n  ids: PropTypes.arrayOf(PropTypes.number),\n}\n\nGuessList.defaultProps = { ids: [1, 1, 1, 1] }\n\nexport default GuessList\n","import { connect } from 'react-redux'\nimport GuessList from '../components/guess-list'\n\nconst isNumeric = aString => !Number.isNaN(Number.parseInt(aString, 10))\n\nconst getGuessIds = guesses => {\n  const ids = Object.keys(guesses)\n  return ids.filter(value => isNumeric(value))\n}\n\nconst mapStateToProps = state => ({ ids: getGuessIds(state.guesses) })\n\nconst GuessListContainer = connect(\n  mapStateToProps,\n  null\n)(GuessList)\n\nexport default GuessListContainer\n","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport style from '../styles/shield.module.css'\n\nconst Shield = ({ open, code, onUnlock }) => (\n  <div className={style.container}>\n    {code.map(color => (\n      <p>{color}</p>\n    ))}\n    <p>{open ? 'true' : 'false'}</p>\n    <button type=\"button\" onClick={onUnlock}>\n      dummy\n    </button>\n  </div>\n)\n\nShield.defaultProps = {\n  open: false,\n  code: ['', '', '', ''],\n  onUnlock: null,\n}\n\nShield.propTypes = {\n  open: PropTypes.bool,\n  code: PropTypes.arrayOf(PropTypes.string),\n  onUnlock: PropTypes.func,\n}\n\nexport default Shield\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { onUnlock } from '../state/actions'\nimport Shield from '../components/shield'\n\nconst mapStateToProps = state => ({\n  open: state.solution.open,\n  code: state.solution.code,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ onUnlock }, dispatch)\n\nconst ShieldContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Shield)\n\nexport default ShieldContainer\n","import React from 'react'\nimport boardStyle from '../styles/board.module.css'\nimport FeedbackListContainer from '../containers/feedback-list-container'\nimport GuessListContainer from '../containers/guess-list-container'\nimport ShieldContainer from '../containers/shield-container'\n\nconst Board = () => (\n  <div className={boardStyle.board}>\n    <div className={boardStyle.play}>\n      <div className={boardStyle.feedback}>\n        <FeedbackListContainer />\n      </div>\n      <div className={boardStyle.guess}>\n        <GuessListContainer />\n      </div>\n    </div>\n    <div className={boardStyle.solution}>\n      <div className={boardStyle.empty} />\n      <div className={boardStyle.shield}>\n        <ShieldContainer />\n      </div>\n    </div>\n  </div>\n)\n\nexport default Board\n","import { combineReducers } from 'redux'\n\n// Levels of difficulty\nconst LEVEL = {\n  EASY: 'EASY',\n  MEDIUM: 'MEDIUM',\n  HARD: 'HARD',\n}\n\n// Possible colors to choose from the code\nconst COLORS = ['blue', 'green', 'gold', 'pink', 'ivory', 'brown']\nconst initialSettings = { level: LEVEL.EASY }\n\n/* eslint-disable object-curly-newline */\nconst initialPegs = {\n  1: { id: 1, enable: false, color: 'transparent', size: 'large' },\n  2: { id: 2, enable: false, color: 'transparent', size: 'large' },\n  3: { id: 3, enable: false, color: 'transparent', size: 'large' },\n  4: { id: 4, enable: false, color: 'transparent', size: 'large' },\n\n  5: { id: 5, enable: false, color: 'transparent', size: 'large' },\n  6: { id: 6, enable: false, color: 'transparent', size: 'large' },\n  7: { id: 7, enable: false, color: 'transparent', size: 'large' },\n  8: { id: 8, enable: false, color: 'transparent', size: 'large' },\n\n  9: { id: 9, enable: false, color: 'transparent', size: 'large' },\n  10: { id: 10, enable: false, color: 'transparent', size: 'large' },\n  11: { id: 11, enable: false, color: 'transparent', size: 'large' },\n  12: { id: 12, enable: false, color: 'transparent', size: 'large' },\n\n  13: { id: 13, enable: false, color: 'transparent', size: 'large' },\n  14: { id: 14, enable: false, color: 'transparent', size: 'large' },\n  15: { id: 15, enable: false, color: 'transparent', size: 'large' },\n  16: { id: 16, enable: false, color: 'transparent', size: 'large' },\n\n  17: { id: 17, enable: false, color: 'transparent', size: 'large' },\n  18: { id: 18, enable: false, color: 'transparent', size: 'large' },\n  19: { id: 19, enable: false, color: 'transparent', size: 'large' },\n  20: { id: 20, enable: false, color: 'transparent', size: 'large' },\n\n  21: { id: 21, enable: false, color: 'transparent', size: 'large' },\n  22: { id: 22, enable: false, color: 'transparent', size: 'large' },\n  23: { id: 23, enable: false, color: 'transparent', size: 'large' },\n  24: { id: 24, enable: false, color: 'transparent', size: 'large' },\n\n  25: { id: 25, enable: false, color: 'transparent', size: 'large' },\n  26: { id: 26, enable: false, color: 'transparent', size: 'large' },\n  27: { id: 27, enable: false, color: 'transparent', size: 'large' },\n  28: { id: 28, enable: false, color: 'transparent', size: 'large' },\n\n  29: { id: 29, enable: false, color: 'transparent', size: 'large' },\n  30: { id: 30, enable: false, color: 'transparent', size: 'large' },\n  31: { id: 31, enable: false, color: 'transparent', size: 'large' },\n  32: { id: 32, enable: false, color: 'transparent', size: 'large' },\n\n  33: { id: 33, enable: false, color: 'transparent', size: 'large' },\n  34: { id: 34, enable: false, color: 'transparent', size: 'large' },\n  35: { id: 35, enable: false, color: 'transparent', size: 'large' },\n  36: { id: 36, enable: false, color: 'transparent', size: 'large' },\n\n  37: { id: 37, enable: false, color: 'transparent', size: 'large' },\n  38: { id: 38, enable: false, color: 'transparent', size: 'large' },\n  39: { id: 39, enable: false, color: 'transparent', size: 'large' },\n  40: { id: 40, enable: false, color: 'transparent', size: 'large' },\n\n  41: { id: 41, enable: false, color: 'transparent', size: 'large' },\n  42: { id: 42, enable: false, color: 'transparent', size: 'large' },\n  43: { id: 43, enable: false, color: 'transparent', size: 'large' },\n  44: { id: 44, enable: false, color: 'transparent', size: 'large' },\n\n  45: { id: 45, enable: true, color: 'transparent', size: 'large' },\n  46: { id: 46, enable: true, color: 'transparent', size: 'large' },\n  47: { id: 47, enable: true, color: 'transparent', size: 'large' },\n  48: { id: 48, enable: true, color: 'transparent', size: 'large' },\n\n  49: { id: 49, enable: false, color: 'transparent', size: 'small' },\n  50: { id: 50, enable: false, color: 'transparent', size: 'small' },\n  51: { id: 51, enable: false, color: 'transparent', size: 'small' },\n  52: { id: 52, enable: false, color: 'transparent', size: 'small' },\n\n  53: { id: 53, enable: false, color: 'transparent', size: 'small' },\n  54: { id: 54, enable: false, color: 'transparent', size: 'small' },\n  55: { id: 55, enable: false, color: 'transparent', size: 'small' },\n  56: { id: 56, enable: false, color: 'transparent', size: 'small' },\n\n  57: { id: 57, enable: false, color: 'transparent', size: 'small' },\n  58: { id: 58, enable: false, color: 'transparent', size: 'small' },\n  59: { id: 59, enable: false, color: 'transparent', size: 'small' },\n  60: { id: 60, enable: false, color: 'transparent', size: 'small' },\n\n  61: { id: 61, enable: false, color: 'transparent', size: 'small' },\n  62: { id: 62, enable: false, color: 'transparent', size: 'small' },\n  63: { id: 63, enable: false, color: 'transparent', size: 'small' },\n  64: { id: 64, enable: false, color: 'transparent', size: 'small' },\n\n  65: { id: 65, enable: false, color: 'transparent', size: 'small' },\n  66: { id: 66, enable: false, color: 'transparent', size: 'small' },\n  67: { id: 67, enable: false, color: 'transparent', size: 'small' },\n  68: { id: 68, enable: false, color: 'transparent', size: 'small' },\n\n  69: { id: 69, enable: false, color: 'transparent', size: 'small' },\n  70: { id: 70, enable: false, color: 'transparent', size: 'small' },\n  71: { id: 71, enable: false, color: 'transparent', size: 'small' },\n  72: { id: 72, enable: false, color: 'transparent', size: 'small' },\n\n  73: { id: 73, enable: false, color: 'transparent', size: 'small' },\n  74: { id: 74, enable: false, color: 'transparent', size: 'small' },\n  75: { id: 75, enable: false, color: 'transparent', size: 'small' },\n  76: { id: 76, enable: false, color: 'transparent', size: 'small' },\n\n  77: { id: 77, enable: false, color: 'transparent', size: 'small' },\n  78: { id: 78, enable: false, color: 'transparent', size: 'small' },\n  79: { id: 79, enable: false, color: 'transparent', size: 'small' },\n  80: { id: 80, enable: false, color: 'transparent', size: 'small' },\n\n  81: { id: 81, enable: false, color: 'transparent', size: 'small' },\n  82: { id: 82, enable: false, color: 'transparent', size: 'small' },\n  83: { id: 83, enable: false, color: 'transparent', size: 'small' },\n  84: { id: 84, enable: false, color: 'transparent', size: 'small' },\n\n  85: { id: 85, enable: false, color: 'transparent', size: 'small' },\n  86: { id: 86, enable: false, color: 'transparent', size: 'small' },\n  87: { id: 87, enable: false, color: 'transparent', size: 'small' },\n  88: { id: 88, enable: false, color: 'transparent', size: 'small' },\n\n  89: { id: 89, enable: false, color: 'transparent', size: 'small' },\n  90: { id: 90, enable: false, color: 'transparent', size: 'small' },\n  91: { id: 91, enable: false, color: 'transparent', size: 'small' },\n  92: { id: 92, enable: false, color: 'transparent', size: 'small' },\n\n  93: { id: 93, enable: false, color: 'transparent', size: 'small' },\n  94: { id: 94, enable: false, color: 'transparent', size: 'small' },\n  95: { id: 95, enable: false, color: 'transparent', size: 'small' },\n  96: { id: 96, enable: false, color: 'transparent', size: 'small' },\n}\n\nconst initialGuesses = {\n  activeRow: 12,\n  1: { id: 1, complete: false, pegs: [1, 2, 3, 4], focused: false },\n  2: { id: 2, complete: false, pegs: [5, 6, 7, 8], focused: false },\n  3: { id: 3, complete: false, pegs: [9, 10, 11, 12], focused: false },\n  4: { id: 4, complete: false, pegs: [13, 14, 15, 16], focused: false },\n  5: { id: 5, complete: false, pegs: [17, 18, 19, 20], focused: false },\n  6: { id: 6, complete: false, pegs: [21, 22, 23, 24], focused: false },\n  7: { id: 7, complete: false, pegs: [25, 26, 27, 28], focused: false },\n  8: { id: 8, complete: false, pegs: [29, 30, 31, 32], focused: false },\n  9: { id: 9, complete: false, pegs: [33, 34, 35, 36], focused: false },\n  10: { id: 10, complete: false, pegs: [37, 38, 39, 40], focused: false },\n  11: { id: 11, complete: false, pegs: [41, 42, 43, 44], focused: false },\n  12: { id: 12, complete: false, pegs: [45, 46, 47, 48], focused: true },\n}\n\nconst initialFeedbacks = {\n  activeRow: 12,\n  1: { id: 1, pegs: [49, 50, 51, 52] },\n  2: { id: 2, pegs: [53, 54, 55, 56] },\n  3: { id: 3, pegs: [57, 58, 59, 60] },\n  4: { id: 4, pegs: [61, 62, 63, 64] },\n  5: { id: 5, pegs: [65, 66, 67, 68] },\n  6: { id: 6, pegs: [69, 70, 71, 72] },\n  7: { id: 7, pegs: [73, 74, 75, 76] },\n  8: { id: 8, pegs: [77, 78, 79, 80] },\n  9: { id: 9, pegs: [81, 82, 83, 84] },\n  10: { id: 10, pegs: [85, 86, 87, 88] },\n  11: { id: 11, pegs: [89, 90, 91, 92] },\n  12: { id: 12, pegs: [93, 94, 95, 96] },\n}\n/* eslint-enable object-curly-newline */\n\nconst initialPopup = {\n  show: false,\n  type: 'success',\n}\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nconst getRandomArbitrary = (min, max) =>\n  Math.floor(Math.random() * (max - min)) + min\n\n/**\n * Generates a random array of colors. 3 levels are available. If easy or medium,\n * generator cannot pick the same color twice. If difficult, the same color can be\n * picked twice.\n * @param {String} level one of [easy, medium, hard] and defaults to easy\n * @param {Array} palette choice of colors\n * @param {Number} size number of colors to pick\n */\nconst codeGenerator = (level = LEVEL.EASY, palette = COLORS, size = 4) => {\n  const pick = new Array(size)\n  let colorChoices = [...palette]\n\n  for (let i = 0; i < pick.length; i += 1) {\n    const colorIndex = getRandomArbitrary(0, colorChoices.length)\n    pick[i] = colorChoices[colorIndex]\n    if (level !== LEVEL.HARD) {\n      // Removes color from palette\n      colorChoices = colorChoices.filter((value, index) => index !== colorIndex)\n    }\n  }\n  return pick\n}\n\n// const initialSolution = {\n//   open: false,\n//   code: IS_QA_ENV ? ['blue', 'pink', 'gold', 'green'] : codeGenerator(),\n// }\n\nconst initialSolution = {\n  open: false,\n  code: true ? ['blue', 'pink', 'gold', 'green'] : codeGenerator(),\n}\n\nconst initialGameStatus = {\n  status: 'in progress', // status = ['in progress', 'done']\n  result: '', // result = ['success', 'failure']\n}\n\nconst updateSettings = (state = initialSettings, action) => {\n  switch (action.type) {\n    case 'CHANGE_LEVEL':\n      return { level: action.value }\n    case 'RESET':\n      return initialSettings\n    default:\n      return state\n  }\n}\n\nconst updatePeg = (state = initialPegs, action) => {\n  switch (action.type) {\n    case 'UPDATE_COLOR':\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          color: action.color,\n        },\n      }\n    case 'UPDATE_ACTIONABILITY':\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          enable: action.enable,\n        },\n      }\n    case 'RESET':\n      return initialPegs\n    default:\n      return state\n  }\n}\n\nconst updateGuess = (state = initialGuesses, action) => {\n  switch (action.type) {\n    case 'UPDATE_ACTIVE_ROW':\n      return {\n        ...state,\n        activeRow: action.value,\n      }\n    case 'CHANGE_FOCUS':\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          focused: action.focus,\n        },\n      }\n    case 'RESET':\n      return initialGuesses\n    default:\n      return state\n  }\n}\n\nconst updateFeedback = (state = initialFeedbacks, action) => {\n  switch (action.type) {\n    case 'UPDATE_ACTIVE_ROW':\n      return {\n        ...state,\n        activeRow: action.value,\n      }\n    case 'RESET':\n      return initialFeedbacks\n    default:\n      return state\n  }\n}\n\nconst updatePopup = (state = initialPopup, action) => {\n  switch (action.type) {\n    case 'SHOW_HELP':\n      return {\n        ...state,\n        show: true,\n        type: 'help',\n      }\n    case 'SHOW_SUCCESS':\n      return {\n        ...state,\n        show: true,\n        type: 'success',\n      }\n    case 'SHOW_FAILURE':\n      return {\n        ...state,\n        show: true,\n        type: 'failure',\n      }\n    case 'CLOSE':\n      return {\n        ...state,\n        show: false,\n        type: 'help',\n      }\n    case 'RESET':\n      return initialPopup\n    default:\n      return state\n  }\n}\n\nconst updateSolution = (state = initialSolution, action) => {\n  switch (action.type) {\n    case 'SHOW_SOLUTION':\n      return {\n        ...state,\n        open: true,\n      }\n    case 'HIDE_SOLUTION':\n      return {\n        ...state,\n        open: false,\n      }\n    case 'RESET':\n      return initialSolution\n    default:\n      return state\n  }\n}\n\nconst updateStatus = (state = initialGameStatus, action) => {\n  switch (action.type) {\n    case 'UPDATE_STATUS':\n      return {\n        ...state,\n        status: action.status,\n        result: action.result,\n      }\n    case 'RESET':\n      return initialGameStatus\n    default:\n      return state\n  }\n}\n\nexport const enableBatching = reducer =>\n  function batchingReducer(state, action) {\n    switch (action.type) {\n      case 'BATCH_ACTIONS':\n        return action.actions.reduce(batchingReducer, state)\n      default:\n        return reducer(state, action)\n    }\n  }\n\nexport const mastermind = combineReducers({\n  settings: updateSettings,\n  pegs: updatePeg,\n  guesses: updateGuess,\n  feedbacks: updateFeedback,\n  popup: updatePopup,\n  solution: updateSolution,\n  game: updateStatus,\n})\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport Board from './board'\nimport createStore from '../state/createStore'\n\nconst store = createStore()\n\nconst Mastermind = () => (\n  <Provider store={store}>\n    <Board />\n  </Provider>\n)\n\nexport default Mastermind\n","import { createStore as reduxCreateStore } from 'redux'\nimport { mastermind, enableBatching } from './reducers'\n\nconst createStore = () => reduxCreateStore(enableBatching(mastermind))\nexport default createStore\n","import React from 'react'\nimport SEO from '../components/seo'\nimport Mastermind from '../games/mastermind/components/mastermind'\nimport gameStyle from '../styles/game.module.css'\n\nconst GamePage = () => (\n  <div className={gameStyle.container}>\n    <SEO title=\"Mastermind\" />\n    <Mastermind />\n  </div>\n)\n\nexport default GamePage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board-module--board--3-gvW\",\"play\":\"board-module--play--2oR03\",\"solution\":\"board-module--solution--3BnBH\",\"feedback\":\"board-module--feedback--17khy\",\"guess\":\"board-module--guess--1Hk57\",\"empty\":\"board-module--empty--3cI2B\",\"shield\":\"board-module--shield--2qnZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feedback-list-module--container--2MH0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallCircle\":\"peg-module--smallCircle--ebj9l\",\"largeCircle\":\"peg-module--largeCircle--3D8JZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"guess-list-module--container--zqPhz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"shield-module--container--2AVsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"game-module--container--1Q00p\"};"],"sourceRoot":""}