{"version":3,"sources":["webpack:///./src/templates/post-template.js","webpack:///./src/components/seo.js","webpack:///./src/styles/post.module.css"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_styles_post_module_css__WEBPACK_IMPORTED_MODULE_3__","_styles_post_module_css__WEBPACK_IMPORTED_MODULE_3___default","Post","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","className","postStyles","post","date","dangerouslySetInnerHTML","__html","propTypes","PropTypes","shape","string","isRequired","category","path","defaultProps","detailsQuery","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","module","exports"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAAO,EAAAI,GAOME,EAAO,SAAAC,GAAc,IACjBC,EADiBD,EAAXE,KACND,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACEZ,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAACV,EAAA,EAAD,CAAKW,MAAM,SACXf,EAAAa,EAAAC,cAAA,OAAKE,UAAWC,IAAWC,MACzBlB,EAAAa,EAAAC,cAAA,MAAIE,UAAWC,IAAWF,OAAQJ,EAAYI,OAC9Cf,EAAAa,EAAAC,cAAA,KAAGE,UAAWC,IAAWE,MAAOR,EAAYQ,MAC5CnB,EAAAa,EAAAC,cAAA,OAAKM,wBAAyB,CAAEC,OAAQT,QAMhDL,EAAKe,UAAY,CACfZ,KAAMa,IAAUC,MAAM,CACpBf,eAAgBc,IAAUC,MAAM,CAC9BZ,KAAMW,IAAUE,OAAOC,WACvBf,YAAaY,IAAUC,MAAM,CAC3BG,SAAUJ,IAAUE,OAAOC,WAC3BP,KAAMI,IAAUE,OAAOC,WACvBE,KAAML,IAAUE,OAAOC,WACvBX,MAAOQ,IAAUE,OAAOC,kBAMhCnB,EAAKsB,aAAe,CAClBnB,KAAM,IAGOH,YAER,IAAMT,EAAS,sHCrChBgC,EAAY,aAYlB,SAASC,EAATvB,GAA2D,IAA5CwB,EAA4CxB,EAA5CwB,YAAaC,EAA+BzB,EAA/ByB,KAAMC,EAAyB1B,EAAzB0B,KAAMC,EAAmB3B,EAAnB2B,SAAUpB,EAASP,EAATO,MAChD,OACEqB,EAAAvB,EAAAC,cAACuB,EAAA,YAAD,CACEC,MAAOR,EACPS,OAAQ,SAAA7B,GACN,IAAM8B,EACJR,GAAetB,EAAK+B,KAAKC,aAAaV,YACxC,OACEI,EAAAvB,EAAAC,cAAC6B,EAAA9B,EAAD,CACE+B,eAAgB,CACdX,QAEFlB,MAAOA,EACP8B,cAAa,QAAUnC,EAAK+B,KAAKC,aAAa3B,MAC9CmB,KAAM,CACJ,CACEY,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShC,GAEX,CACEiC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASrC,EAAK+B,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAAShC,GAEX,CACE+B,KAAI,sBACJC,QAASP,IAGVU,OACCf,EAASgB,OAAS,EACd,CACEL,KAAI,WACJC,QAASZ,EAASiB,KAAT,OAEX,IAELF,OAAOhB,MAtDlBxB,KAAA2C,IA8DJtB,EAAIF,aAAe,CACjBG,YAAa,GACbC,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIT,UAAY,CACdU,YAAaT,IAAUE,OACvBQ,KAAMV,IAAUE,OAChBS,KAAMX,IAAU+B,MAChBnB,SAAUZ,IAAUgC,QAAQhC,IAAUE,QACtCV,MAAOQ,IAAUE,OAAOC,YAGXK,8KC/FfyB,EAAAC,QAAA,CAAkBvC,KAAA,2BAAAH,MAAA,4BAAAI,KAAA","file":"component---src-templates-post-template-js-5a3bf3f79dbe16cb8d8e.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\n\nimport postStyles from '../styles/post.module.css'\n\nconst Post = ({ data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <div>\n      <SEO title=\"Blog\" />\n      <div className={postStyles.post}>\n        <h1 className={postStyles.title}>{frontmatter.title}</h1>\n        <p className={postStyles.date}>{frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </div>\n  )\n}\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      html: PropTypes.string.isRequired,\n      frontmatter: PropTypes.shape({\n        category: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        path: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nPost.defaultProps = {\n  data: {},\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        category\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post-module--post--28Mq2\",\"title\":\"post-module--title--3XBo2\",\"date\":\"post-module--date--1eM4d\"};"],"sourceRoot":""}