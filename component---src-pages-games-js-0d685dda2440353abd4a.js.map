{"version":3,"sources":["webpack:///./src/games/mastermind/state/reducers.js","webpack:///./src/games/mastermind/state/createStore.js","webpack:///./src/games/mastermind/components/pin.js","webpack:///./src/games/mastermind/components/result.js","webpack:///./src/games/mastermind/containers/result-container.js","webpack:///./src/games/mastermind/state/actions.js","webpack:///./src/games/mastermind/components/round.js","webpack:///./src/games/mastermind/containers/round-container.js","webpack:///./src/games/mastermind/components/solution.js","webpack:///./src/games/mastermind/containers/solution-container.js","webpack:///./src/games/mastermind/components/mastermind.js","webpack:///./src/pages/games.js","webpack:///./src/components/seo.js","webpack:///./src/styles/game.module.css","webpack:///./src/games/mastermind/styles/pin.module.css","webpack:///./src/games/mastermind/styles/result.module.css","webpack:///./src/games/mastermind/styles/round.module.css","webpack:///./src/games/mastermind/styles/solution.module.css","webpack:///./src/games/mastermind/styles/mastermind.module.css"],"names":["LEVEL","initialSettings","level","initialPegs","1","id","enable","color","size","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","initialGuesses","activeRow","complete","pegs","initialFeedbacks","initialPopup","show","type","initialSolution","open","code","initialGameStatus","status","result","mastermind","combineReducers","settings","state","action","value","_Object$assign","_Object$assign2","Object","assign","guesses","_Object$assign3","feedbacks","popup","solution","game","createStore","reduxCreateStore","reducer","batchingReducer","actions","reduce","applyMiddleware","thunk","getColorStyle","colorStyles","black","style","ivory","gold","orange","pink","tomato","gray","green","yellow","blue","brown","transparent","getSizeStyle","small","large","Pin","_ref","visible","border","onPress","react_default","a","createElement","onClick","className","grayBorder","noBorder","join","defaultProps","propTypes","PropTypes","number","isRequired","oneOf","string","bool","func","Result","props","_props$ids","ids","i11","i12","i21","i22","_props$colors","colors","c11","c12","c21","c22","container","grid","pin","arrayOf","ResultContainer","connect","ownProps","row","map","COLORS","changePegColor","pegNum","newColor","nextPegColor","dispatch","getState","prevIndexColor","indexOf","newIndexColor","length","nextColor","changeActiveRow","rowNum","changeRowStatus","enabled","updateStatus","outcome","batchActions","_len","arguments","Array","_key","disableCurrentRow","i","apply","concat","enableNextRow","giveFeedback","array1","array2","feedbackColors","pegColors","isSolved","prev","index","feedback","guess","_compareCodes","nbOfMatch","indexMatch","findMatchIndexes","arr1","filter","includes","arr2","acc","e","incValue","compareCodes","match","misplaced","push","generateFeedback","pegIds","onUnlock","incomplete","some","Round","i1","i2","i3","i4","c1","c2","c3","c4","RoundContainer","bindActionCreators","Solution","lock","index_esm","SolutionContainer","store","MastermindGame","es","result_container","round_container","solution_container","GamePage","seo","title","components_mastermind","detailsQuery","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","shape","module","exports","circle","white","brownBorder","blackBorder","controls"],"mappings":"2KAGMA,SACE,QAOFC,EAAkB,CAAEC,MAAOF,GAG3BG,EAAc,CAClBC,EAAG,CAAEC,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACvDC,EAAG,CAAEJ,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACvDE,EAAG,CAAEL,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACvDG,EAAG,CAAEN,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEvDI,EAAG,CAAEP,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACvDK,EAAG,CAAER,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACvDM,EAAG,CAAET,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACvDO,EAAG,CAAEV,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEvDQ,EAAG,CAAEX,GAAI,EAAGC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACvDS,GAAI,CAAEZ,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDU,GAAI,CAAEb,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDW,GAAI,CAAEd,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDY,GAAI,CAAEf,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDa,GAAI,CAAEhB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDc,GAAI,CAAEjB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDe,GAAI,CAAElB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDgB,GAAI,CAAEnB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDiB,GAAI,CAAEpB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDkB,GAAI,CAAErB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDmB,GAAI,CAAEtB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDoB,GAAI,CAAEvB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDqB,GAAI,CAAExB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDsB,GAAI,CAAEzB,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDuB,GAAI,CAAE1B,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDwB,GAAI,CAAE3B,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDyB,GAAI,CAAE5B,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD0B,GAAI,CAAE7B,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD2B,GAAI,CAAE9B,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzD4B,GAAI,CAAE/B,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD6B,GAAI,CAAEhC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD8B,GAAI,CAAEjC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD+B,GAAI,CAAElC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDgC,GAAI,CAAEnC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDiC,GAAI,CAAEpC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDkC,GAAI,CAAErC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDmC,GAAI,CAAEtC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDoC,GAAI,CAAEvC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDqC,GAAI,CAAExC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDsC,GAAI,CAAEzC,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDuC,GAAI,CAAE1C,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDwC,GAAI,CAAE3C,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDyC,GAAI,CAAE5C,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD0C,GAAI,CAAE7C,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD2C,GAAI,CAAE9C,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzD4C,GAAI,CAAE/C,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD6C,GAAI,CAAEhD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD8C,GAAI,CAAEjD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD+C,GAAI,CAAElD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDgD,GAAI,CAAEnD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDiD,GAAI,CAAEpD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDkD,GAAI,CAAErD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDmD,GAAI,CAAEtD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDoD,GAAI,CAAEvD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDqD,GAAI,CAAExD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDsD,GAAI,CAAEzD,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDuD,GAAI,CAAE1D,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzDwD,GAAI,CAAE3D,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzDyD,GAAI,CAAE5D,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD0D,GAAI,CAAE7D,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD2D,GAAI,CAAE9D,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SAEzD4D,GAAI,CAAE/D,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD6D,GAAI,CAAEhE,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD8D,GAAI,CAAEjE,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,SACzD+D,GAAI,CAAElE,GAAI,GAAIC,QAAQ,EAAOC,MAAO,cAAeC,KAAM,UAGrDgE,EAAiB,CACrBC,UAAW,EACXrE,EAAG,CAAEC,GAAI,EAAGqE,UAAU,EAAOC,KAAM,CAAC,EAAG,EAAG,EAAG,GAAIrE,QAAQ,GACzDG,EAAG,CAAEJ,GAAI,EAAGqE,UAAU,EAAOC,KAAM,CAAC,EAAG,EAAG,EAAG,GAAIrE,QAAQ,GACzDI,EAAG,CAAEL,GAAI,EAAGqE,UAAU,EAAOC,KAAM,CAAC,EAAG,GAAI,GAAI,IAAKrE,QAAQ,GAC5DK,EAAG,CAAEN,GAAI,EAAGqE,UAAU,EAAOC,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKrE,QAAQ,GAC7DM,EAAG,CAAEP,GAAI,EAAGqE,UAAU,EAAOC,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKrE,QAAQ,GAC7DO,EAAG,CAAER,GAAI,EAAGqE,UAAU,EAAOC,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKrE,QAAQ,GAC7DQ,EAAG,CAAET,GAAI,EAAGqE,UAAU,EAAOC,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKrE,QAAQ,GAC7DS,EAAG,CAAEV,GAAI,EAAGqE,UAAU,EAAOC,KAAM,CAAC,GAAI,GAAI,GAAI,IAAKrE,QAAQ,IAGzDsE,EAAmB,CACvBH,UAAW,EACXrE,EAAG,CAAEC,GAAI,EAAGsE,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BlE,EAAG,CAAEJ,GAAI,EAAGsE,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BjE,EAAG,CAAEL,GAAI,EAAGsE,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/BhE,EAAG,CAAEN,GAAI,EAAGsE,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/B/D,EAAG,CAAEP,GAAI,EAAGsE,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/B9D,EAAG,CAAER,GAAI,EAAGsE,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/B7D,EAAG,CAAET,GAAI,EAAGsE,KAAM,CAAC,GAAI,GAAI,GAAI,KAC/B5D,EAAG,CAAEV,GAAI,EAAGsE,KAAM,CAAC,GAAI,GAAI,GAAI,MAI3BE,EAAe,CACnBC,MAAM,EACNC,KAAM,WAqCFC,EAAkB,CACtBC,MAAM,EACNC,KAAa,CAAC,OAAQ,QAAS,OAAQ,SAGnCC,EAAoB,CACxBC,OAAQ,cACRC,OAAQ,IAyJGC,EAAaC,YAAgB,CACxCC,SAvJqB,SAACC,EAAyBC,GAC/C,YAD0D,IAApCD,MAAQxF,GACtByF,EAAOX,MACb,IAAK,eACH,MAAO,CAAE7E,MAAOwF,EAAOC,OACzB,IAAK,QACH,OAAO1F,EACT,QACE,OAAOwF,IAiJXd,KA7IgB,SAACc,EAAqBC,GAAW,IAAAE,EAAAC,EACjD,YADiD,IAAhCJ,MAAQtF,GACjBuF,EAAOX,MACb,IAAK,eACH,OAAAe,OAAAC,OAAA,GACKN,IADLG,EAAA,IAEGF,EAAOrF,IAFVyF,OAAAC,OAAA,GAGON,EAAMC,EAAOrF,IAHpB,CAIIE,MAAOmF,EAAOnF,QAJlBqF,IAOF,IAAK,uBACH,OAAAE,OAAAC,OAAA,GACKN,IADLI,EAAA,IAEGH,EAAOrF,IAFVyF,OAAAC,OAAA,GAGON,EAAMC,EAAOrF,IAHpB,CAIIC,OAAQoF,EAAOpF,SAJnBuF,IAOF,IAAK,QACH,OAAO1F,EACT,QACE,OAAOsF,IAyHXO,QArHkB,SAACP,EAAwBC,GAAW,IAAAO,EACtD,YADsD,IAAnCR,MAAQjB,GACnBkB,EAAOX,MACb,IAAK,oBACH,OAAAe,OAAAC,OAAA,GACKN,EADL,CAEEhB,UAAWiB,EAAOC,QAEtB,IAAK,oBACH,OAAAG,OAAAC,OAAA,GACKN,IADLQ,EAAA,IAEGP,EAAOrF,IAFVyF,OAAAC,OAAA,GAGON,EAAMC,EAAOrF,IAHpB,CAIIC,OAAQoF,EAAOpF,SAJnB2F,IAOF,IAAK,QACH,OAAOzB,EACT,QACE,OAAOiB,IAoGXS,UAhGqB,SAACT,EAA0BC,GAChD,YAD2D,IAArCD,MAAQb,GACtBc,EAAOX,MACb,IAAK,oBACH,OAAAe,OAAAC,OAAA,GACKN,EADL,CAEEhB,UAAWiB,EAAOC,QAEtB,IAAK,QACH,OAAOf,EACT,QACE,OAAOa,IAuFXU,MAnFkB,SAACV,EAAsBC,GACzC,YADoD,IAAjCD,MAAQZ,GACnBa,EAAOX,MACb,IAAK,YACH,OAAAe,OAAAC,OAAA,GACKN,EADL,CAEEX,MAAM,EACNC,KAAM,SAEV,IAAK,eACH,OAAAe,OAAAC,OAAA,GACKN,EADL,CAEEX,MAAM,EACNC,KAAM,YAEV,IAAK,eACH,OAAAe,OAAAC,OAAA,GACKN,EADL,CAEEX,MAAM,EACNC,KAAM,YAEV,IAAK,QACH,OAAAe,OAAAC,OAAA,GACKN,EADL,CAEEX,MAAM,EACNC,KAAM,SAEV,IAAK,QACH,OAAOF,EACT,QACE,OAAOY,IAuDXW,SAnDqB,SAACX,EAAyBC,GAC/C,YAD0D,IAApCD,MAAQT,GACtBU,EAAOX,MACb,IAAK,gBACH,OAAAe,OAAAC,OAAA,GACKN,EADL,CAEER,MAAM,IAEV,IAAK,gBACH,OAAAa,OAAAC,OAAA,GACKN,EADL,CAEER,MAAM,IAEV,IAAK,QACH,OAAOD,EAET,QACE,OAAOS,IAoCXY,KAhCmB,SAACZ,EAA2BC,GAC/C,YAD0D,IAAtCD,MAAQN,GACpBO,EAAOX,MACb,IAAK,gBACH,OAAAe,OAAAC,OAAA,GACKN,EADL,CAEEL,OAAQM,EAAON,OACfC,OAAQK,EAAOL,SAEnB,IAAK,QACH,OAAOF,EACT,QACE,OAAOM,MC5SEa,EAFK,kBAClBC,aDiT4BC,ECjTIlB,EDkThC,SAASmB,EAAgBhB,EAAOC,GAC9B,OAAQA,EAAOX,MACb,IAAK,gBACH,OAAOW,EAAOgB,QAAQC,OAAOF,EAAiBhB,GAChD,QACE,OAAOe,EAAQf,EAAOC,MCvTiBkB,YAAgBC,MDiTjC,IAAAL,8CE5SxBM,EAAgB,SAAAvG,GACpB,IAAMwG,EAAc,CAClBC,MAAOC,IAAMD,MACbE,MAAOD,IAAMC,MACbC,KAAMF,IAAME,KACZC,OAAQH,IAAMG,OACdC,KAAMJ,IAAMI,KACZC,OAAQL,IAAMK,OACdC,KAAMN,IAAMM,KACZC,MAAOP,IAAMO,MACbC,OAAQR,IAAMQ,OACdC,KAAMT,IAAMS,KACZC,MAAOV,IAAMU,MACbC,YAAaX,IAAMW,aAGrB,OAAOb,EAAYxG,IAAUwG,EAAYa,aAGrCC,EAAe,SAAArH,GAAI,MAAc,UAATA,EAAmByG,IAAMa,MAAQb,IAAMc,OAI/DC,EAAM,SAAAC,GAAA,IAFWC,EAER7H,EAAH4H,EAAG5H,GAAIG,EAAPyH,EAAOzH,KAAMD,EAAb0H,EAAa1H,MAAO4H,EAApBF,EAAoBE,OAAQC,EAA5BH,EAA4BG,QAA5B,OACVC,EAAAC,EAAAC,cAAA,UACElI,GAAIA,EACJ0E,KAAK,SACLyD,QAASJ,EAAU,kBAAMA,EAAQ/H,IAAM,KACvCoI,UAAW,CACTZ,EAAarH,GACbsG,EAAcvG,IATG2H,EAUFC,EAVcD,EAAUjB,IAAMyB,WAAazB,IAAM0B,WAWhEC,KAAK,QAIXZ,EAAIa,aAAe,CACjBrI,KAAM,QACND,MAAO,cACP4H,QAAQ,EACRC,QAAS,MAGXJ,EAAIc,UAAY,CACdzI,GAAI0I,IAAUC,OAAOC,WACrBzI,KAAMuI,IAAUG,MAAM,CAAC,QAAS,UAChC3I,MAAOwI,IAAUI,OACjBhB,OAAQY,IAAUK,KAClBhB,QAASW,IAAUM,MAGNrB,0BCxDTsB,EAAS,SAAAC,GAAS,IAAAC,EAIlBD,EAFFE,IAAMC,EAFcF,EAAA,GAETG,EAFSH,EAAA,GAEJI,EAFIJ,EAAA,GAECK,EAFDL,EAAA,GAAAM,EAIlBP,EADFQ,OAASC,EAHWF,EAAA,GAGNG,EAHMH,EAAA,GAGDI,EAHCJ,EAAA,GAGIK,EAHJL,EAAA,GAMtB,OACEzB,EAAAC,EAAAC,cAAA,OAAKE,UAAWxB,IAAMmD,WACpB/B,EAAAC,EAAAC,cAAA,OAAKE,UAAWxB,IAAMoD,MACpBhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOyJ,EAAK3J,GAAIqJ,IAClCrB,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAO0J,EAAK5J,GAAIsJ,IAClCtB,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAO2J,EAAK7J,GAAIuJ,IAClCvB,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAO4J,EAAK9J,GAAIwJ,OAM1CP,EAAOT,aAAe,GAEtBS,EAAOR,UAAY,CACjBW,IAAKV,IAAUwB,QAAQxB,IAAUI,QAAQF,WACzCc,OAAQhB,IAAUwB,QAAQxB,IAAUI,QAAQF,YAG/BK,QCbAkB,EALSC,YATA,SAAChF,EAAOiF,GAC9B,IAAMjB,EAAMhE,EAAMS,UAAUwE,EAASC,KAAKhG,KACpCoF,EAASN,EAAImB,IAAI,SAAAvK,GAAE,OAAIoF,EAAMd,KAAKtE,GAAIE,QAC5C,MAAO,CACLkJ,MACAM,WAMF,KAFsBU,CAGtBnB,GCdIuB,eAAS,CAAC,OAAQ,QAAS,OAAQ,OAAQ,QAAS,UAwE7CC,EAAiB,SAACC,EAAQC,GAAT,MAAuB,CACnDjG,KAAM,eACN1E,GAAI0K,EACJxK,MAAOyK,IAGIC,EAAe,SAAAF,GAAM,OAAI,SAACG,EAAUC,GAAa,IAEtDH,EA3EU,SAAAzK,GAChB,IAAM6K,EAAiBP,EAAOQ,QAAQ9K,GAChC+K,EACJF,IAAmBP,EAAOU,QAAoB,KAAVhL,EAAe,EAAI6K,EAAiB,EAC1E,OAAOP,EAAOS,GAuEGE,CADCL,IAAWxG,KAAKoG,GAA1BxK,OAER2K,EAASJ,EAAeC,EAAQC,MAmBrBS,EAAkB,SAAAC,GAAM,MAAK,CACxC3G,KAAM,oBACNY,MAAO+F,IA4BIC,EAAkB,SAACD,EAAQE,GAAT,MAAsB,CACnD7G,KAAM,oBACN1E,GAAIqL,EACJpL,OAAQsL,IAGGC,EAAe,SAAAC,GAAO,MAAK,CACtC/G,KAAM,gBACNK,OAAQ,OACRC,OAAQyG,IAGGC,EAAe,mBAAAC,EAAAC,UAAAV,OAAI7E,EAAJ,IAAAwF,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAIzF,EAAJyF,GAAAF,UAAAE,GAAA,MAAiB,CAC3CpH,KAAM,gBACN2B,YAuBW0F,EAAoB,kBAAM,SAAClB,EAAUC,GAChD,IARwBO,EAUXjH,EAFC0G,IAEZnF,QAAWvB,UAEbyG,GAZwBQ,EAYJjH,EAZc,SAACyG,EAAUC,GAC7C,IAEMzE,EAFQyE,IACOnF,QAAQ0F,GAAQ/G,KACdiG,IAAI,SAAAyB,GAAC,MA/EO,CACnCtH,KAAM,uBACN1E,GA6E2CgM,EA5E3C/L,QAAQ,KA6ER4K,EAASa,EAAYO,WAAZ,GAAaX,EAAgBD,GAAQ,IAArCa,OAAgD7F,UAW9C8F,EAAgB,kBAAM,SAACtB,EAAUC,GAC5C,IA7BuBO,EA6BjBjG,EAAQ0F,IAEJ/F,EACNK,EADFY,KAAQjB,OAGGX,EACTgB,EADFO,QAAWvB,UAGK,IAAdA,GAA8B,gBAAXW,GACrB8F,EAASW,EAAa,WAGpBpH,EAAY,GAAgB,gBAAXW,GAEnB8F,GA3CqBQ,EA0CrBjH,GAAa,EA1CkB,SAACyG,EAAUC,GAC5C,IAEMzE,EAFQyE,IACOnF,QAAQ0F,GAAQ/G,KACdiG,IAAI,SAAAyB,GAAC,MA5DM,CAClCtH,KAAM,uBACN1E,GA0D0CgM,EAzD1C/L,QAAQ,KA0DR4K,EACEa,EAAYO,WAAZ,GACEb,EAAgBC,GAChBC,EAAgBD,GAAQ,IAF1Ba,OAGK7F,UAoDI+F,EAAe,kBAAM,SAACvB,EAAUC,GAC3C,IA5LeuB,EAAQC,EA8KWC,EAc5BnH,EAAQ0F,IAED1G,EACTgB,EADFO,QAAWvB,UAGPoI,EADSpH,EAAMO,QAAQvB,GAAWE,KACfiG,IAAI,SAAAvK,GAAE,OAAIoF,EAAMd,KAAKtE,GAAIE,QAC5CuM,GAlMSJ,EAkMUG,EAlMFF,EAkMalH,EAAMW,SAASlB,KAjMnDwH,EAAO/F,OACL,SAACoG,EAAMpH,EAAOqH,GAAd,OAAyBrH,IAAUgH,EAAOK,IAAiBD,IAC3D,IAgMIE,EA9JiB,SAACC,EAAO9G,GAG/B,IAFA,IAAMf,EAAS,GAD6B8H,EAzBzB,SAACT,EAAQC,GAC5B,IAAIS,EAIEC,EAzBiB,SAACX,EAAQC,GAAT,OACvBD,EAAO/F,OAAO,SAACoG,EAAMpH,EAAOqH,GAE1B,OADgBrH,IAAUgH,EAAOK,GAASD,EAAKR,OAAOS,GAASD,GAE9D,IAqBgBO,CAAiBZ,EAAQC,GAC5CS,EAAYC,EAAW9B,OAGvB,IAAMgC,EAAOb,EAAOc,OAAO,SAAC7H,EAAOqH,GAAR,OAAmBK,EAAWI,SAAST,KAC9DU,EAAOf,EAAOa,OAAO,SAAC7H,EAAOqH,GAAR,OAAmBK,EAAWI,SAAST,KAYhE,MAAO,CAACI,EARQG,EAAK5G,OAAO,SAACgH,EAAKhI,GAChC,IA7BwBiI,EA6BpBC,EAAWF,EAKf,OAJID,EAAKD,SAAS9H,KA9BMiI,EA+BGjI,EAAzB+H,EAAmBA,EA/BeF,OAAO,SAAA7H,GAAK,OAAIA,IAAUiI,IAgC5DC,GAAY,GAEPA,GACN,IAMwBC,CAAaZ,EAAO9G,GAAxC2H,EAFqCZ,EAAA,GAE9Ba,EAF8Bb,EAAA,GAGnCd,EAAI,EAAGA,EAAI0B,EAAO1B,GAAK,EAC9BhH,EAAO4I,KAAK,SAEd,IAAK,IAAI5B,EAAI,EAAGA,EAAI2B,EAAW3B,GAAK,EAClChH,EAAO4I,KAAK,SAEd,IAAK,IAAI5B,EAAIhH,EAAOkG,OAAQc,EA/Db,EA+D2BA,GAAK,EAC7ChH,EAAO4I,KAAK,eAEd,OAAO5I,EAkJU6I,CAAiBrB,EAAWpH,EAAMW,SAASlB,MAK5D,OAJAgG,GAtBkC0B,EAsBJK,EAtBsB,SAAC/B,EAAUC,GAC/D,IAAM1F,EAAQ0F,IAEC1G,EACXgB,EADFS,UAAazB,UAET0J,EAAS1I,EAAMS,UAAUzB,GAAWE,KACpCkI,EAAYsB,EAAOvD,IAAI,SAACvK,EAAI2M,GAAL,OAAeJ,EAAeI,KACrDtG,EAAUyH,EAAOvD,IAAI,SAACvK,EAAI2M,GAAL,OACzBlC,EAAezK,EAAIwM,EAAUG,MAE/B9B,EAASa,EAAYO,WAAZ,EAAgB5F,OAarBoG,GACF5B,EAASW,EAAa,YAEjBiB,IA8CIsB,EAAW,kBAAM,SAAAlD,GAC5B,IACI4B,GAAW,EADI5B,EAjBe,SAACA,EAAUC,GAC7C,IAAM1F,EAAQ0F,IAED1G,EACTgB,EADFO,QAAWvB,UAIP4J,EAFS5I,EAAMO,QAAQvB,GAAWE,KACfiG,IAAI,SAAAyB,GAAC,OAAI5G,EAAMd,KAAK0H,GAAG9L,QACnB+N,KAC3B,SAAA3I,GAAK,MAAc,KAAVA,GAA0B,gBAAVA,IAK3B,OAHI0I,GACFnD,EAvJ2B,CAC7BnG,KAAM,cAwJCsJ,MAQLnD,EAASkB,KACTlB,EAASuB,KACTK,EAAW5B,EAASsB,MAGlBM,IACF5B,EAtD8B,SAACA,EAAUC,GAK5B,SAJDA,IAEZ9E,KAAQjB,QAGR8F,EArI6B,CAC/BnG,KAAM,oBAqLJmG,EA7C4B,SAACA,EAAUC,GACzC,IAAM1F,EAAQ0F,IAEJ/F,EACNK,EADFY,KAAQjB,OAGAC,EACNI,EADFY,KAAQhB,OAEK,SAAXD,GAAgC,YAAXC,GACvB6F,EAhI+B,CACjCnG,KAAM,iBAkIS,SAAXK,GAAgC,WAAXC,GACvB6F,EAhI8B,CAChCnG,KAAM,wCCnHFwJ,EAAQ,SAAAhF,GAAS,IAAAC,EAMjBD,EAJFE,IAAM+E,EAFahF,EAAA,GAETiF,EAFSjF,EAAA,GAELkF,EAFKlF,EAAA,GAEDmF,EAFCnF,EAAA,GAAAM,EAMjBP,EAHFQ,OAAS6E,EAHU9E,EAAA,GAGN+E,EAHM/E,EAAA,GAGFgF,EAHEhF,EAAA,GAGEiF,EAHFjF,EAAA,GAInBxJ,EAEEiJ,EAFFjJ,OACA8H,EACEmB,EADFnB,QAGII,EAAUlI,EAAS8H,EAAU,KAEnC,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAWxB,IAAMmD,WACpB/B,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOqO,EAAIvO,GAAImO,EAAIpG,QAASI,IAC9CH,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOsO,EAAIxO,GAAIoO,EAAIrG,QAASI,IAC9CH,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOuO,EAAIzO,GAAIqO,EAAItG,QAASI,IAC9CH,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOwO,EAAI1O,GAAIsO,EAAIvG,QAASI,MAKpD+F,EAAM1F,aAAe,CACnBvI,QAAQ,EACR8H,QAAS,MAGXmG,EAAMzF,UAAY,CAChBW,IAAKV,IAAUwB,QAAQxB,IAAUI,QAAQF,WACzCc,OAAQhB,IAAUwB,QAAQxB,IAAUI,QAAQF,WAC5C3I,OAAQyI,IAAUK,KAClBhB,QAASW,IAAUM,MAGNkF,QCTAS,EALQvE,YAlBC,SAAChF,EAAOiF,GAC9B,IAAMjB,EAAMhE,EAAMO,QAAQ0E,EAASC,KAAKhG,KAClCoF,EAASN,EAAImB,IAAI,SAAAvK,GAAE,OAAIoF,EAAMd,KAAKtE,GAAIE,QAM5C,MAAO,CACLkJ,MACAM,SACAzJ,OAJEmF,EAHFO,QACG0E,EAASC,KAAQrK,SAUG,SAAA4K,GAAQ,OACjC+D,YAAmB,CAAE7G,QAAS,SAAA/H,GAAE,OAAI4K,EAAa5K,KAAO6K,IAEnCT,CAGrB8D,8BCbIW,EAAW,SAAAjH,GAA8B,IAA3BhD,EAA2BgD,EAA3BhD,KAAMC,EAAqB+C,EAArB/C,KAAMkJ,EAAenG,EAAfmG,SACvBQ,EAAkB1J,EADoB,GAClC2J,EAAc3J,EADoB,GAC9B4J,EAAU5J,EADoB,GAC1B6J,EAAM7J,EADoB,GAG7C,OAAID,EAEAoD,EAAAC,EAAAC,cAAA,OAAKE,UAAWxB,IAAMmD,WACpB/B,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOqO,EAAIvO,GAAG,eAChCgI,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOsO,EAAIxO,GAAG,eAChCgI,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOuO,EAAIzO,GAAG,eAChCgI,EAAAC,EAAAC,cAAC+B,EAAD,CAAK9J,KAAK,QAAQD,MAAOwO,EAAI1O,GAAG,gBAMpCgI,EAAAC,EAAAC,cAAA,OAAKE,UAAWxB,IAAMmD,WACpB/B,EAAAC,EAAAC,cAAA,UAAQxD,KAAK,SAASyD,QAAS4F,EAAU3F,UAAWxB,IAAMkI,MACxD9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAQ5O,KAAM,QAMtB0O,EAASrG,aAAe,CACtB5D,MAAM,EACNC,KAAM,CAAC,GAAI,GAAI,GAAI,IACnBkJ,SAAU,MAGZc,EAASpG,UAAY,CACnB7D,KAAM8D,IAAUK,KAChBlE,KAAM6D,IAAUwB,QAAQxB,IAAUI,QAClCiF,SAAUrF,IAAUM,MAGP6F,SC9BAG,GALW5E,YARF,SAAAhF,GAAK,MAAK,CAChCR,KAAMQ,EAAMW,SAASnB,KACrBC,KAAMO,EAAMW,SAASlB,OAGI,SAAAgG,GAAQ,OACjC+D,YAAmB,CAAEb,YAAYlD,IAETT,CAGxByE,yBCRII,GAAQhJ,IAmCCiJ,GAjCQ,kBACrBlH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAUF,MAAOA,IACfjH,EAAAC,EAAAC,cAAA,OAAKE,UAAWxB,KAAMmD,WACpB/B,EAAAC,EAAAC,cAACkH,EAAD,CAAiB9E,IAAK,IACtBtC,EAAAC,EAAAC,cAACmH,EAAD,CAAgB/E,IAAK,IAErBtC,EAAAC,EAAAC,cAACkH,EAAD,CAAiB9E,IAAK,IACtBtC,EAAAC,EAAAC,cAACmH,EAAD,CAAgB/E,IAAK,IAErBtC,EAAAC,EAAAC,cAACkH,EAAD,CAAiB9E,IAAK,IACtBtC,EAAAC,EAAAC,cAACmH,EAAD,CAAgB/E,IAAK,IAErBtC,EAAAC,EAAAC,cAACkH,EAAD,CAAiB9E,IAAK,IACtBtC,EAAAC,EAAAC,cAACmH,EAAD,CAAgB/E,IAAK,IAErBtC,EAAAC,EAAAC,cAACkH,EAAD,CAAiB9E,IAAK,IACtBtC,EAAAC,EAAAC,cAACmH,EAAD,CAAgB/E,IAAK,IAErBtC,EAAAC,EAAAC,cAACkH,EAAD,CAAiB9E,IAAK,IACtBtC,EAAAC,EAAAC,cAACmH,EAAD,CAAgB/E,IAAK,IAErBtC,EAAAC,EAAAC,cAACkH,EAAD,CAAiB9E,IAAK,IACtBtC,EAAAC,EAAAC,cAACmH,EAAD,CAAgB/E,IAAK,IAErBtC,EAAAC,EAAAC,cAACkH,EAAD,CAAiB9E,IAAK,IACtBtC,EAAAC,EAAAC,cAACmH,EAAD,CAAgB/E,IAAK,IAErBtC,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACoH,GAAD,SC1BSC,UAPE,kBACfvH,EAAAC,EAAAC,cAAA,OAAKE,UAAWxB,IAAMmD,WACpB/B,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAKC,MAAM,eACXzH,EAAAC,EAAAC,cAACwH,GAAD,gHCHEC,EAAY,aAYlB,SAASC,EAAThI,GAA2D,IAA5CiI,EAA4CjI,EAA5CiI,YAAaC,EAA+BlI,EAA/BkI,KAAMC,EAAyBnI,EAAzBmI,KAAMC,EAAmBpI,EAAnBoI,SAAUP,EAAS7H,EAAT6H,MAChD,OACEQ,EAAAhI,EAAAC,cAACgI,EAAA,YAAD,CACEC,MAAOR,EACPS,OAAQ,SAAAC,GACN,IAAMC,EACJT,GAAeQ,EAAKE,KAAKC,aAAaX,YACxC,OACEI,EAAAhI,EAAAC,cAACuI,EAAAxI,EAAD,CACEyI,eAAgB,CACdZ,QAEFL,MAAOA,EACPkB,cAAa,QAAUN,EAAKE,KAAKC,aAAaf,MAC9CM,KAAM,CACJ,CACEa,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASpB,GAEX,CACEqB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASpB,GAEX,CACEmB,KAAI,sBACJC,QAASP,IAGVpE,OACC8D,EAAS9E,OAAS,EACd,CACE0F,KAAI,WACJC,QAASb,EAASzH,KAAT,OAEX,IAEL2D,OAAO6D,MAtDlBM,KAAAW,IA8DJpB,EAAIpH,aAAe,CACjBqH,YAAa,GACbC,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAInH,UAAY,CACdoH,YAAanH,IAAUI,OACvBgH,KAAMpH,IAAUI,OAChBiH,KAAMrH,IAAUwB,QACdxB,IAAUuI,MAAM,CACdL,KAAMlI,IAAUI,OAChB+H,QAASnI,IAAUI,UAGvBkH,SAAUtH,IAAUwB,QAAQxB,IAAUI,QACtC2G,MAAO/G,IAAUI,OAAOF,YAGXgH,8KCpGfsB,EAAAC,QAAA,CAAkBpH,UAAA,sDCAlBmH,EAAAC,QAAA,CAAkBC,OAAA,4BAAA3J,MAAA,qDAAAC,MAAA,qDAAAf,MAAA,2BAAA0K,MAAA,2BAAAxK,MAAA,2BAAAC,KAAA,0BAAAC,OAAA,4BAAAC,KAAA,0BAAAC,OAAA,4BAAAC,KAAA,0BAAAC,MAAA,2BAAAC,OAAA,4BAAAC,KAAA,0BAAAC,MAAA,2BAAAC,YAAA,iCAAA+J,YAAA,iCAAAC,YAAA,iCAAAlJ,WAAA,gCAAAC,SAAA,oDCAlB4I,EAAAC,QAAA,CAAkBpH,UAAA,kCAAAC,KAAA,mDCAlBkH,EAAAC,QAAA,CAAkBpH,UAAA,uDCAlBmH,EAAAC,QAAA,CAAkBpH,UAAA,oCAAA+E,KAAA,qDCAlBoC,EAAAC,QAAA,CAAkBpH,UAAA,sCAAAyH,SAAA","file":"component---src-pages-games-js-0d685dda2440353abd4a.js","sourcesContent":["import { combineReducers } from 'redux'\n\n// Levels of difficulty\nconst LEVEL = {\n  EASY: 'EASY',\n  MEDIUM: 'MEDIUM',\n  HARD: 'HARD',\n}\n\n// Possible colors to choose from the code\nconst COLORS = ['blue', 'green', 'gold', 'pink', 'ivory', 'brown']\nconst initialSettings = { level: LEVEL.EASY }\n\n/* eslint-disable object-curly-newline */\nconst initialPegs = {\n  1: { id: 1, enable: false, color: 'transparent', size: 'large' },\n  2: { id: 2, enable: false, color: 'transparent', size: 'large' },\n  3: { id: 3, enable: false, color: 'transparent', size: 'large' },\n  4: { id: 4, enable: false, color: 'transparent', size: 'large' },\n\n  5: { id: 5, enable: false, color: 'transparent', size: 'large' },\n  6: { id: 6, enable: false, color: 'transparent', size: 'large' },\n  7: { id: 7, enable: false, color: 'transparent', size: 'large' },\n  8: { id: 8, enable: false, color: 'transparent', size: 'large' },\n\n  9: { id: 9, enable: false, color: 'transparent', size: 'large' },\n  10: { id: 10, enable: false, color: 'transparent', size: 'large' },\n  11: { id: 11, enable: false, color: 'transparent', size: 'large' },\n  12: { id: 12, enable: false, color: 'transparent', size: 'large' },\n\n  13: { id: 13, enable: false, color: 'transparent', size: 'large' },\n  14: { id: 14, enable: false, color: 'transparent', size: 'large' },\n  15: { id: 15, enable: false, color: 'transparent', size: 'large' },\n  16: { id: 16, enable: false, color: 'transparent', size: 'large' },\n\n  17: { id: 17, enable: false, color: 'transparent', size: 'large' },\n  18: { id: 18, enable: false, color: 'transparent', size: 'large' },\n  19: { id: 19, enable: false, color: 'transparent', size: 'large' },\n  20: { id: 20, enable: false, color: 'transparent', size: 'large' },\n\n  21: { id: 21, enable: false, color: 'transparent', size: 'large' },\n  22: { id: 22, enable: false, color: 'transparent', size: 'large' },\n  23: { id: 23, enable: false, color: 'transparent', size: 'large' },\n  24: { id: 24, enable: false, color: 'transparent', size: 'large' },\n\n  25: { id: 25, enable: false, color: 'transparent', size: 'large' },\n  26: { id: 26, enable: false, color: 'transparent', size: 'large' },\n  27: { id: 27, enable: false, color: 'transparent', size: 'large' },\n  28: { id: 28, enable: false, color: 'transparent', size: 'large' },\n\n  29: { id: 29, enable: false, color: 'transparent', size: 'large' },\n  30: { id: 30, enable: false, color: 'transparent', size: 'large' },\n  31: { id: 31, enable: false, color: 'transparent', size: 'large' },\n  32: { id: 32, enable: false, color: 'transparent', size: 'large' },\n\n  33: { id: 49, enable: false, color: 'transparent', size: 'small' },\n  34: { id: 50, enable: false, color: 'transparent', size: 'small' },\n  35: { id: 51, enable: false, color: 'transparent', size: 'small' },\n  36: { id: 52, enable: false, color: 'transparent', size: 'small' },\n\n  37: { id: 53, enable: false, color: 'transparent', size: 'small' },\n  38: { id: 54, enable: false, color: 'transparent', size: 'small' },\n  39: { id: 55, enable: false, color: 'transparent', size: 'small' },\n  40: { id: 56, enable: false, color: 'transparent', size: 'small' },\n\n  41: { id: 57, enable: false, color: 'transparent', size: 'small' },\n  42: { id: 58, enable: false, color: 'transparent', size: 'small' },\n  43: { id: 59, enable: false, color: 'transparent', size: 'small' },\n  44: { id: 60, enable: false, color: 'transparent', size: 'small' },\n\n  45: { id: 61, enable: false, color: 'transparent', size: 'small' },\n  46: { id: 62, enable: false, color: 'transparent', size: 'small' },\n  47: { id: 63, enable: false, color: 'transparent', size: 'small' },\n  48: { id: 64, enable: false, color: 'transparent', size: 'small' },\n\n  49: { id: 65, enable: false, color: 'transparent', size: 'small' },\n  50: { id: 66, enable: false, color: 'transparent', size: 'small' },\n  51: { id: 67, enable: false, color: 'transparent', size: 'small' },\n  52: { id: 68, enable: false, color: 'transparent', size: 'small' },\n\n  53: { id: 69, enable: false, color: 'transparent', size: 'small' },\n  54: { id: 70, enable: false, color: 'transparent', size: 'small' },\n  55: { id: 71, enable: false, color: 'transparent', size: 'small' },\n  56: { id: 72, enable: false, color: 'transparent', size: 'small' },\n\n  57: { id: 73, enable: false, color: 'transparent', size: 'small' },\n  58: { id: 74, enable: false, color: 'transparent', size: 'small' },\n  59: { id: 75, enable: false, color: 'transparent', size: 'small' },\n  60: { id: 76, enable: false, color: 'transparent', size: 'small' },\n\n  61: { id: 77, enable: false, color: 'transparent', size: 'small' },\n  62: { id: 78, enable: false, color: 'transparent', size: 'small' },\n  63: { id: 79, enable: false, color: 'transparent', size: 'small' },\n  64: { id: 80, enable: false, color: 'transparent', size: 'small' },\n}\n\nconst initialGuesses = {\n  activeRow: 8,\n  1: { id: 1, complete: false, pegs: [1, 2, 3, 4], enable: false },\n  2: { id: 2, complete: false, pegs: [5, 6, 7, 8], enable: false },\n  3: { id: 3, complete: false, pegs: [9, 10, 11, 12], enable: false },\n  4: { id: 4, complete: false, pegs: [13, 14, 15, 16], enable: false },\n  5: { id: 5, complete: false, pegs: [17, 18, 19, 20], enable: false },\n  6: { id: 6, complete: false, pegs: [21, 22, 23, 24], enable: false },\n  7: { id: 7, complete: false, pegs: [25, 26, 27, 28], enable: false },\n  8: { id: 8, complete: false, pegs: [29, 30, 31, 32], enable: true },\n}\n\nconst initialFeedbacks = {\n  activeRow: 8,\n  1: { id: 1, pegs: [33, 34, 35, 36] },\n  2: { id: 2, pegs: [37, 38, 39, 40] },\n  3: { id: 3, pegs: [41, 42, 43, 44] },\n  4: { id: 4, pegs: [45, 46, 47, 48] },\n  5: { id: 5, pegs: [49, 50, 51, 52] },\n  6: { id: 6, pegs: [53, 54, 55, 56] },\n  7: { id: 7, pegs: [57, 58, 59, 60] },\n  8: { id: 8, pegs: [61, 62, 63, 64] },\n}\n/* eslint-enable object-curly-newline */\n\nconst initialPopup = {\n  show: false,\n  type: 'success',\n}\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nconst getRandomArbitrary = (min, max) =>\n  Math.floor(Math.random() * (max - min)) + min\n\n/**\n * Generates a random array of colors. 3 levels are available. If easy or medium,\n * generator cannot pick the same color twice. If difficult, the same color can be\n * picked twice.\n * @param {String} level one of [easy, medium, hard] and defaults to easy\n * @param {Array} palette choice of colors\n * @param {Number} size number of colors to pick\n */\nconst codeGenerator = (level = LEVEL.EASY, palette = COLORS, size = 4) => {\n  const pick = new Array(size)\n  let colorChoices = [...palette]\n\n  for (let i = 0; i < pick.length; i += 1) {\n    const colorIndex = getRandomArbitrary(0, colorChoices.length)\n    pick[i] = colorChoices[colorIndex]\n    if (level !== LEVEL.HARD) {\n      // Removes color from palette\n      colorChoices = colorChoices.filter((value, index) => index !== colorIndex)\n    }\n  }\n  return pick\n}\n\n// const initialSolution = {\n//   open: false,\n//   code: IS_QA_ENV ? ['blue', 'pink', 'gold', 'green'] : codeGenerator(),\n// }\n\nconst initialSolution = {\n  open: false,\n  code: true ? ['blue', 'green', 'gold', 'pink'] : codeGenerator(),\n}\n\nconst initialGameStatus = {\n  status: 'in progress', // status = ['in progress', 'done']\n  result: '', // result = ['success', 'failure']\n}\n\nconst updateSettings = (state = initialSettings, action) => {\n  switch (action.type) {\n    case 'CHANGE_LEVEL':\n      return { level: action.value }\n    case 'RESET':\n      return initialSettings\n    default:\n      return state\n  }\n}\n\nconst updatePeg = (state = initialPegs, action) => {\n  switch (action.type) {\n    case 'UPDATE_COLOR':\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          color: action.color,\n        },\n      }\n    case 'UPDATE_ACTIONABILITY':\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          enable: action.enable,\n        },\n      }\n    case 'RESET':\n      return initialPegs\n    default:\n      return state\n  }\n}\n\nconst updateGuess = (state = initialGuesses, action) => {\n  switch (action.type) {\n    case 'UPDATE_ACTIVE_ROW':\n      return {\n        ...state,\n        activeRow: action.value,\n      }\n    case 'UPDATE_ROW_STATUS':\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          enable: action.enable,\n        },\n      }\n    case 'RESET':\n      return initialGuesses\n    default:\n      return state\n  }\n}\n\nconst updateFeedback = (state = initialFeedbacks, action) => {\n  switch (action.type) {\n    case 'UPDATE_ACTIVE_ROW':\n      return {\n        ...state,\n        activeRow: action.value,\n      }\n    case 'RESET':\n      return initialFeedbacks\n    default:\n      return state\n  }\n}\n\nconst updatePopup = (state = initialPopup, action) => {\n  switch (action.type) {\n    case 'SHOW_HELP':\n      return {\n        ...state,\n        show: true,\n        type: 'help',\n      }\n    case 'SHOW_SUCCESS':\n      return {\n        ...state,\n        show: true,\n        type: 'success',\n      }\n    case 'SHOW_FAILURE':\n      return {\n        ...state,\n        show: true,\n        type: 'failure',\n      }\n    case 'CLOSE':\n      return {\n        ...state,\n        show: false,\n        type: 'help',\n      }\n    case 'RESET':\n      return initialPopup\n    default:\n      return state\n  }\n}\n\nconst updateSolution = (state = initialSolution, action) => {\n  switch (action.type) {\n    case 'SHOW_SOLUTION':\n      return {\n        ...state,\n        open: true,\n      }\n    case 'HIDE_SOLUTION':\n      return {\n        ...state,\n        open: false,\n      }\n    case 'RESET':\n      return initialSolution\n\n    default:\n      return state\n  }\n}\n\nconst updateStatus = (state = initialGameStatus, action) => {\n  switch (action.type) {\n    case 'UPDATE_STATUS':\n      return {\n        ...state,\n        status: action.status,\n        result: action.result,\n      }\n    case 'RESET':\n      return initialGameStatus\n    default:\n      return state\n  }\n}\n\nexport const enableBatching = reducer =>\n  function batchingReducer(state, action) {\n    switch (action.type) {\n      case 'BATCH_ACTIONS':\n        return action.actions.reduce(batchingReducer, state)\n      default:\n        return reducer(state, action)\n    }\n  }\n\nexport const mastermind = combineReducers({\n  settings: updateSettings,\n  pegs: updatePeg,\n  guesses: updateGuess,\n  feedbacks: updateFeedback,\n  popup: updatePopup,\n  solution: updateSolution,\n  game: updateStatus,\n})\n","import { createStore as reduxCreateStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { mastermind, enableBatching } from './reducers'\n\nconst createStore = () =>\n  reduxCreateStore(enableBatching(mastermind), applyMiddleware(thunk))\nexport default createStore\n","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport style from '../styles/pin.module.css'\n\nconst getColorStyle = color => {\n  const colorStyles = {\n    black: style.black,\n    ivory: style.ivory,\n    gold: style.gold,\n    orange: style.orange,\n    pink: style.pink,\n    tomato: style.tomato,\n    gray: style.gray,\n    green: style.green,\n    yellow: style.yellow,\n    blue: style.blue,\n    brown: style.brown,\n    transparent: style.transparent,\n  }\n\n  return colorStyles[color] || colorStyles.transparent\n}\n\nconst getSizeStyle = size => (size === 'small' ? style.small : style.large)\n\nconst getBorderStyle = visible => (visible ? style.grayBorder : style.noBorder)\n\nconst Pin = ({ id, size, color, border, onPress }) => (\n  <button\n    id={id}\n    type=\"submit\"\n    onClick={onPress ? () => onPress(id) : null}\n    className={[\n      getSizeStyle(size),\n      getColorStyle(color),\n      getBorderStyle(border),\n    ].join(' ')}\n  />\n)\n\nPin.defaultProps = {\n  size: 'small',\n  color: 'transparent',\n  border: true,\n  onPress: null,\n}\n\nPin.propTypes = {\n  id: PropTypes.number.isRequired,\n  size: PropTypes.oneOf(['small', 'large']),\n  color: PropTypes.string,\n  border: PropTypes.bool,\n  onPress: PropTypes.func,\n}\n\nexport default Pin\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Pin from './pin'\nimport style from '../styles/result.module.css'\n\nconst Result = props => {\n  const {\n    ids: [i11, i12, i21, i22],\n    colors: [c11, c12, c21, c22],\n  } = props\n\n  return (\n    <div className={style.container}>\n      <div className={style.grid}>\n        <Pin size=\"small\" color={c11} id={i11} />\n        <Pin size=\"small\" color={c12} id={i12} />\n        <Pin size=\"small\" color={c21} id={i21} />\n        <Pin size=\"small\" color={c22} id={i22} />\n      </div>\n    </div>\n  )\n}\n\nResult.defaultProps = {}\n\nResult.propTypes = {\n  ids: PropTypes.arrayOf(PropTypes.string).isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Result\n","import { connect } from 'react-redux'\nimport Result from '../components/result'\n\nconst mapStateToProps = (state, ownProps) => {\n  const ids = state.feedbacks[ownProps.row].pegs\n  const colors = ids.map(id => state.pegs[id].color)\n  return {\n    ids,\n    colors,\n  }\n}\n\nconst ResultContainer = connect(\n  mapStateToProps,\n  null\n)(Result)\n\nexport default ResultContainer\n","// Possible colors to choose from the code\nconst COLORS = ['blue', 'green', 'gold', 'pink', 'ivory', 'brown']\n\n// Number of positions\nconst CODESIZE = 4\n\nconst nextColor = color => {\n  const prevIndexColor = COLORS.indexOf(color)\n  const newIndexColor =\n    prevIndexColor === COLORS.length || color === '' ? 0 : prevIndexColor + 1\n  return COLORS[newIndexColor]\n}\n\nconst findMatchIndexes = (array1, array2) =>\n  array1.reduce((prev, value, index) => {\n    const isMatch = value === array2[index] ? prev.concat(index) : prev\n    return isMatch\n  }, [])\n\nconst removeValue = (array, e) => array.filter(value => value !== e)\n\nconst matches = (array1, array2) =>\n  array1.reduce(\n    (prev, value, index) => (value !== array2[index] ? false : prev),\n    true\n  )\n\n/**\n * Compares codes in 2 arrays\n * @param {Array} first array\n * @param {Array} second array\n * @returns {Array} Returns the number of correctly placed pegs and misplaced pegs\n */\nconst compareCodes = (array1, array2) => {\n  let nbOfMatch = 0\n  let nbOfMisplaced = 0\n\n  // find matching indexes\n  const indexMatch = findMatchIndexes(array1, array2)\n  nbOfMatch = indexMatch.length\n\n  // remove matching elements\n  const arr1 = array1.filter((value, index) => !indexMatch.includes(index))\n  let arr2 = array2.filter((value, index) => !indexMatch.includes(index))\n\n  // count misplaced elements\n  // removes element from reference array every time a match is found\n  nbOfMisplaced = arr1.reduce((acc, value) => {\n    let incValue = acc\n    if (arr2.includes(value)) {\n      arr2 = removeValue(arr2, value)\n      incValue += 1\n    }\n    return incValue\n  }, 0)\n  return [nbOfMatch, nbOfMisplaced]\n}\n\nconst generateFeedback = (guess, solution) => {\n  const result = []\n  const [match, misplaced] = compareCodes(guess, solution)\n  for (let i = 0; i < match; i += 1) {\n    result.push('black')\n  }\n  for (let i = 0; i < misplaced; i += 1) {\n    result.push('white')\n  }\n  for (let i = result.length; i < CODESIZE; i += 1) {\n    result.push('transparent')\n  }\n  return result\n}\n\nexport const changePegColor = (pegNum, newColor) => ({\n  type: 'UPDATE_COLOR',\n  id: pegNum,\n  color: newColor,\n})\n\nexport const nextPegColor = pegNum => (dispatch, getState) => {\n  const { color } = getState().pegs[pegNum]\n  const newColor = nextColor(color)\n  dispatch(changePegColor(pegNum, newColor))\n}\n\nexport const disablePeg = pegNum => ({\n  type: 'UPDATE_ACTIONABILITY',\n  id: pegNum,\n  enable: false,\n})\n\nexport const enablePeg = pegNum => ({\n  type: 'UPDATE_ACTIONABILITY',\n  id: pegNum,\n  enable: true,\n})\n\nexport const openShield = () => ({\n  type: 'SHOW_SOLUTION',\n})\n\nexport const changeActiveRow = rowNum => ({\n  type: 'UPDATE_ACTIVE_ROW',\n  value: rowNum,\n})\n\nexport const changeLevel = level => ({\n  type: 'CHANGE_LEVEL',\n  value: level,\n})\n\nexport const showHelp = () => ({\n  type: 'SHOW_HELP',\n})\n\nexport const showCongrats = () => ({\n  type: 'SHOW_SUCCESS',\n})\n\nexport const showFailure = () => ({\n  type: 'SHOW_FAILURE',\n})\n\nexport const closePopup = () => ({\n  type: 'CLOSE',\n})\n\nexport const reset = () => ({\n  type: 'RESET',\n})\n\nexport const changeRowStatus = (rowNum, enabled) => ({\n  type: 'UPDATE_ROW_STATUS',\n  id: rowNum,\n  enable: enabled,\n})\n\nexport const updateStatus = outcome => ({\n  type: 'UPDATE_STATUS',\n  status: 'done',\n  result: outcome,\n})\n\nexport const batchActions = (...actions) => ({\n  type: 'BATCH_ACTIONS',\n  actions,\n})\n\nexport const enableRow = rowNum => (dispatch, getState) => {\n  const state = getState()\n  const pegIds = state.guesses[rowNum].pegs\n  const actions = pegIds.map(i => enablePeg(i))\n  dispatch(\n    batchActions(\n      changeActiveRow(rowNum),\n      changeRowStatus(rowNum, true),\n      ...actions\n    )\n  )\n}\n\nexport const disableRow = rowNum => (dispatch, getState) => {\n  const state = getState()\n  const pegIds = state.guesses[rowNum].pegs\n  const actions = pegIds.map(i => disablePeg(i))\n  dispatch(batchActions(changeRowStatus(rowNum, false), ...actions))\n}\n\nexport const disableCurrentRow = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    guesses: { activeRow },\n  } = state\n  dispatch(disableRow(activeRow))\n}\n\nexport const enableNextRow = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    game: { status },\n  } = state\n  let {\n    guesses: { activeRow },\n  } = state\n\n  if (activeRow === 1 && status === 'in progress') {\n    dispatch(updateStatus('failed'))\n  }\n\n  if (activeRow > 1 && status === 'in progress') {\n    activeRow -= 1\n    dispatch(enableRow(activeRow))\n  }\n}\n\nexport const changeFeedbackColors = feedbackColors => (dispatch, getState) => {\n  const state = getState()\n  const {\n    feedbacks: { activeRow },\n  } = state\n  const pegIds = state.feedbacks[activeRow].pegs\n  const pegColors = pegIds.map((id, index) => feedbackColors[index])\n  const actions = pegIds.map((id, index) =>\n    changePegColor(id, pegColors[index])\n  )\n  dispatch(batchActions(...actions))\n}\n\nexport const giveFeedback = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    guesses: { activeRow },\n  } = state\n  const pegIds = state.guesses[activeRow].pegs\n  const pegColors = pegIds.map(id => state.pegs[id].color)\n  const isSolved = matches(pegColors, state.solution.code)\n  const feedback = generateFeedback(pegColors, state.solution.code)\n  dispatch(changeFeedbackColors(feedback))\n  if (isSolved) {\n    dispatch(updateStatus('success'))\n  }\n  return isSolved\n}\n\nexport const showSolution = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    game: { status },\n  } = state\n  if (status === 'done') {\n    dispatch(openShield())\n  }\n}\n\nexport const showResult = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    game: { status },\n  } = state\n  const {\n    game: { result },\n  } = state\n  if (status === 'done' && result === 'success') {\n    dispatch(showCongrats())\n  }\n\n  if (status === 'done' && result === 'failed') {\n    dispatch(showFailure())\n  }\n}\n\nexport const isCodeComplete = () => (dispatch, getState) => {\n  const state = getState()\n  const {\n    guesses: { activeRow },\n  } = state\n  const pegIds = state.guesses[activeRow].pegs\n  const pegColors = pegIds.map(i => state.pegs[i].color)\n  const incomplete = pegColors.some(\n    value => value === '' || value === 'transparent'\n  )\n  if (incomplete) {\n    dispatch(showHelp())\n  }\n  return incomplete\n}\n\nexport const onUnlock = () => dispatch => {\n  const incomplete = dispatch(isCodeComplete())\n  let isSolved = false\n\n  if (!incomplete) {\n    dispatch(disableCurrentRow())\n    dispatch(giveFeedback())\n    isSolved = dispatch(enableNextRow())\n  }\n\n  if (isSolved) {\n    dispatch(showSolution())\n    dispatch(showResult())\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Pin from './pin'\nimport style from '../styles/round.module.css'\n\nconst Round = props => {\n  const {\n    ids: [i1, i2, i3, i4],\n    colors: [c1, c2, c3, c4],\n    enable,\n    onPress,\n  } = props\n\n  const onClick = enable ? onPress : null\n\n  return (\n    <div className={style.container}>\n      <Pin size=\"large\" color={c1} id={i1} onPress={onClick} />\n      <Pin size=\"large\" color={c2} id={i2} onPress={onClick} />\n      <Pin size=\"large\" color={c3} id={i3} onPress={onClick} />\n      <Pin size=\"large\" color={c4} id={i4} onPress={onClick} />\n    </div>\n  )\n}\n\nRound.defaultProps = {\n  enable: false,\n  onPress: null,\n}\n\nRound.propTypes = {\n  ids: PropTypes.arrayOf(PropTypes.string).isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  enable: PropTypes.bool,\n  onPress: PropTypes.func,\n}\n\nexport default Round\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { nextPegColor } from '../state/actions'\nimport Round from '../components/round'\n\nconst mapStateToProps = (state, ownProps) => {\n  const ids = state.guesses[ownProps.row].pegs\n  const colors = ids.map(id => state.pegs[id].color)\n  const {\n    guesses: {\n      [ownProps.row]: { enable },\n    },\n  } = state\n  return {\n    ids,\n    colors,\n    enable,\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ onPress: id => nextPegColor(id) }, dispatch)\n\nconst RoundContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Round)\n\nexport default RoundContainer\n","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n// Changing icon size: https://github.com/react-icons/react-icons/issues/67\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { FaLock } from 'react-icons/fa'\nimport Pin from './pin'\nimport style from '../styles/solution.module.css'\n\nconst Solution = ({ open, code, onUnlock }) => {\n  const [c1, c2, c3, c4] = code\n\n  if (open) {\n    return (\n      <div className={style.container}>\n        <Pin size=\"large\" color={c1} id=\"solution_1\" />\n        <Pin size=\"large\" color={c2} id=\"solution_2\" />\n        <Pin size=\"large\" color={c3} id=\"solution_3\" />\n        <Pin size=\"large\" color={c4} id=\"solution_4\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className={style.container}>\n      <button type=\"submit\" onClick={onUnlock} className={style.lock}>\n        <FaLock size={32} />\n      </button>\n    </div>\n  )\n}\n\nSolution.defaultProps = {\n  open: false,\n  code: ['', '', '', ''],\n  onUnlock: null,\n}\n\nSolution.propTypes = {\n  open: PropTypes.bool,\n  code: PropTypes.arrayOf(PropTypes.string),\n  onUnlock: PropTypes.func,\n}\n\nexport default Solution\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { onUnlock } from '../state/actions'\nimport Solution from '../components/solution'\n\nconst mapStateToProps = state => ({\n  open: state.solution.open,\n  code: state.solution.code,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ onUnlock }, dispatch)\n\nconst SolutionContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Solution)\n\nexport default SolutionContainer\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport createStore from '../state/createStore'\nimport ResultContainer from '../containers/result-container'\nimport RoundContainer from '../containers/round-container'\nimport SolutionContainer from '../containers/solution-container'\nimport style from '../styles/mastermind.module.css'\n\nconst store = createStore()\n\nconst MastermindGame = () => (\n  <Provider store={store}>\n    <div className={style.container}>\n      <ResultContainer row={1} />\n      <RoundContainer row={1} />\n\n      <ResultContainer row={2} />\n      <RoundContainer row={2} />\n\n      <ResultContainer row={3} />\n      <RoundContainer row={3} />\n\n      <ResultContainer row={4} />\n      <RoundContainer row={4} />\n\n      <ResultContainer row={5} />\n      <RoundContainer row={5} />\n\n      <ResultContainer row={6} />\n      <RoundContainer row={6} />\n\n      <ResultContainer row={7} />\n      <RoundContainer row={7} />\n\n      <ResultContainer row={8} />\n      <RoundContainer row={8} />\n\n      <p />\n      <SolutionContainer />\n    </div>\n  </Provider>\n)\n\nexport default MastermindGame\n","import React from 'react'\nimport SEO from '../components/seo'\nimport style from '../styles/game.module.css'\nimport MastermindGame from '../games/mastermind/components/mastermind'\n\nconst GamePage = () => (\n  <div className={style.container}>\n    <SEO title=\"Mastermind\" />\n    <MastermindGame />\n  </div>\n)\n\nexport default GamePage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"game-module--container--1Q00p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"pin-module--circle--2jgNV\",\"small\":\"pin-module--small--1BmmB pin-module--circle--2jgNV\",\"large\":\"pin-module--large--3y6xG pin-module--circle--2jgNV\",\"black\":\"pin-module--black--2QlXG\",\"white\":\"pin-module--white--2Hmkb\",\"ivory\":\"pin-module--ivory--k1fb6\",\"gold\":\"pin-module--gold--2_UcT\",\"orange\":\"pin-module--orange--kTWQX\",\"pink\":\"pin-module--pink--1Qax8\",\"tomato\":\"pin-module--tomato--Ah94p\",\"gray\":\"pin-module--gray--3epZS\",\"green\":\"pin-module--green--2o_Wd\",\"yellow\":\"pin-module--yellow--1UvYs\",\"blue\":\"pin-module--blue--lq78n\",\"brown\":\"pin-module--brown--QGhOU\",\"transparent\":\"pin-module--transparent--15puG\",\"brownBorder\":\"pin-module--brownBorder--ayFgJ\",\"blackBorder\":\"pin-module--blackBorder--3AkKC\",\"grayBorder\":\"pin-module--grayBorder--cAuN0\",\"noBorder\":\"pin-module--noBorder--A5HRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"result-module--container--3c5CO\",\"grid\":\"result-module--grid--Bkt3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"round-module--container--2ZS6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"solution-module--container--McaSr\",\"lock\":\"solution-module--lock--1DvD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"mastermind-module--container--2RwPl\",\"controls\":\"mastermind-module--controls--3MCHO\"};"],"sourceRoot":""}