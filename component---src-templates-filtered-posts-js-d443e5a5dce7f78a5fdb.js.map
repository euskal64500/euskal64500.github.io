{"version":3,"sources":["webpack:///./src/templates/filtered-posts.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_blog_layout__WEBPACK_IMPORTED_MODULE_4__","_components_blog_card__WEBPACK_IMPORTED_MODULE_5__","FilteredPosts","_ref","pageContext","edges","data","blogs","a","createElement","title","map","_ref2","node","id","_node$frontmatter","frontmatter","date","category","description","key","propTypes","PropTypes","shape","string","isRequired","arrayOf","path"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KASMc,EAAgB,SAAAC,GAA2BA,EAAxBC,YAAwB,IAEvCC,EAFuCF,EAAXG,KAEbC,MAAfF,MACR,OACEX,EAAAc,EAAAC,cAACX,EAAA,EAAD,KACEJ,EAAAc,EAAAC,cAACV,EAAA,EAAD,CAAKW,MAAM,SACXhB,EAAAc,EAAAC,cAACT,EAAA,EAAD,KAEIK,EAAMM,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACLC,EAAKD,EAAKC,GADMC,EAEyBF,EAAKG,YAA5CC,EAFcF,EAEdE,KAAMC,EAFQH,EAERG,SAAUR,EAFFK,EAEEL,MAAOS,EAFTJ,EAESI,YAC/B,OACEzB,EAAAc,EAAAC,cAACR,EAAA,EAAD,CACEmB,IAAMN,EACNI,SAAWA,EACXR,MAAQA,EACRO,KAAOA,EACPE,YAAcA,SAU9BjB,EAAcmB,UAAY,CACxBjB,YAAakB,IAAUC,MAAM,CAC3BL,SAAUI,IAAUE,OAAOC,aAE7BnB,KAAMgB,IAAUC,MAAM,CACpBhB,MAAOe,IAAUC,MAAM,CACrBlB,MAAOiB,IAAUI,QACfJ,IAAUC,MAAM,CACdV,KAAMS,IAAUC,MAAM,CACpBP,YAAaM,IAAUC,MAAM,CAC3BL,SAAUI,IAAUE,OAAOC,WAC3BR,KAAMK,IAAUE,OAAOC,WACvBE,KAAML,IAAUE,OAAOC,WACvBf,MAAOY,IAAUE,OAAOC,iBAG3BA,iBAMIvB,YAER,IAAMV,EAAS","file":"component---src-templates-filtered-posts-js-d443e5a5dce7f78a5fdb.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BlogLayout from '../components/blog-layout'\nimport BlogCard from '../components/blog-card'\n\n\nconst FilteredPosts = ({ pageContext, data }) => {\n  // const { category } = pageContext;\n  const { edges } = data.blogs;\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <BlogLayout>\n        { \n          edges.map(({ node }) => {\n            const id = node.id;\n            const { date, category, title, description } = node.frontmatter;\n            return (\n              <BlogCard \n                key={ id }\n                category={ category }\n                title={ title }\n                date={ date }\n                description={ description }\n              />\n            )\n          })\n        }\n      </BlogLayout>\n    </Layout>\n  )\n};\n\nFilteredPosts.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    blogs: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              category: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default FilteredPosts\n\nexport const pageQuery = graphql`\nquery($category: String) {\n  blogs: allMarkdownRemark(\n    sort: { order: DESC, fields: [frontmatter___date] }\n    filter: { frontmatter: { category: { in: [$category] } } }\n  )\n  {\n    edges {\n      node {\n        id\n        frontmatter {\n          author\n          date(formatString: \"MMMM DD, YYYY\")\n          category\n          title\n          description\n          path\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}